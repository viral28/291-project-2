0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Fri Mar 25 22:56:05 2016
0000              5   ;--------------------------------------------------------
                  5   $name motor_control_FINAL_receiving
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _main
0000             27            public _getchar1
0000             28            public _putchar1
0000             29            public _UART1_Init
0000             30            public _Timer4ms
0000             31            public _Timer2_ISR
0000             32            public __c51_external_startup
0000             33            public _PWM4
0000             34            public _PWM3
0000             35            public _PWM2
0000             36            public _PWM1
0000             37            public _pwm_count
0000             38   ;--------------------------------------------------------
0000             39   ; Special Function Registers
0000             40   ;--------------------------------------------------------
0000             41   _P0             DATA 0x80
0000             42   _SP             DATA 0x81
0000             43   _DPL            DATA 0x82
0000             44   _DPH            DATA 0x83
0000             45   _EMI0TC         DATA 0x84
0000             46   _EMI0CF         DATA 0x85
0000             47   _OSCLCN         DATA 0x86
0000             48   _PCON           DATA 0x87
0000             49   _TCON           DATA 0x88
0000             50   _TMOD           DATA 0x89
0000             51   _TL0            DATA 0x8a
0000             52   _TL1            DATA 0x8b
0000             53   _TH0            DATA 0x8c
0000             54   _TH1            DATA 0x8d
0000             55   _CKCON          DATA 0x8e
0000             56   _PSCTL          DATA 0x8f
0000             57   _P1             DATA 0x90
0000             58   _TMR3CN         DATA 0x91
0000             59   _TMR4CN         DATA 0x91
0000             60   _TMR3RLL        DATA 0x92
0000             61   _TMR4RLL        DATA 0x92
0000             62   _TMR3RLH        DATA 0x93
0000             63   _TMR4RLH        DATA 0x93
0000             64   _TMR3L          DATA 0x94
0000             65   _TMR4L          DATA 0x94
0000             66   _TMR3H          DATA 0x95
0000             67   _TMR4H          DATA 0x95
0000             68   _USB0ADR        DATA 0x96
0000             69   _USB0DAT        DATA 0x97
0000             70   _SCON           DATA 0x98
0000             71   _SCON0          DATA 0x98
0000             72   _SBUF           DATA 0x99
0000             73   _SBUF0          DATA 0x99
0000             74   _CPT1CN         DATA 0x9a
0000             75   _CPT0CN         DATA 0x9b
0000             76   _CPT1MD         DATA 0x9c
0000             77   _CPT0MD         DATA 0x9d
0000             78   _CPT1MX         DATA 0x9e
0000             79   _CPT0MX         DATA 0x9f
0000             80   _P2             DATA 0xa0
0000             81   _SPI0CFG        DATA 0xa1
0000             82   _SPI0CKR        DATA 0xa2
0000             83   _SPI0DAT        DATA 0xa3
0000             84   _P0MDOUT        DATA 0xa4
0000             85   _P1MDOUT        DATA 0xa5
0000             86   _P2MDOUT        DATA 0xa6
0000             87   _P3MDOUT        DATA 0xa7
0000             88   _IE             DATA 0xa8
0000             89   _CLKSEL         DATA 0xa9
0000             90   _EMI0CN         DATA 0xaa
0000             91   __XPAGE         DATA 0xaa
0000             92   _SBCON1         DATA 0xac
0000             93   _P4MDOUT        DATA 0xae
0000             94   _PFE0CN         DATA 0xaf
0000             95   _P3             DATA 0xb0
0000             96   _OSCXCN         DATA 0xb1
0000             97   _OSCICN         DATA 0xb2
0000             98   _OSCICL         DATA 0xb3
0000             99   _SBRLL1         DATA 0xb4
0000            100   _SBRLH1         DATA 0xb5
0000            101   _FLSCL          DATA 0xb6
0000            102   _FLKEY          DATA 0xb7
0000            103   _IP             DATA 0xb8
0000            104   _CLKMUL         DATA 0xb9
0000            105   _SMBTC          DATA 0xb9
0000            106   _AMX0N          DATA 0xba
0000            107   _AMX0P          DATA 0xbb
0000            108   _ADC0CF         DATA 0xbc
0000            109   _ADC0L          DATA 0xbd
0000            110   _ADC0H          DATA 0xbe
0000            111   _SFRPAGE        DATA 0xbf
0000            112   _SMB0CN         DATA 0xc0
0000            113   _SMB1CN         DATA 0xc0
0000            114   _SMB0CF         DATA 0xc1
0000            115   _SMB1CF         DATA 0xc1
0000            116   _SMB0DAT        DATA 0xc2
0000            117   _SMB1DAT        DATA 0xc2
0000            118   _ADC0GTL        DATA 0xc3
0000            119   _ADC0GTH        DATA 0xc4
0000            120   _ADC0LTL        DATA 0xc5
0000            121   _ADC0LTH        DATA 0xc6
0000            122   _P4             DATA 0xc7
0000            123   _TMR2CN         DATA 0xc8
0000            124   _TMR5CN         DATA 0xc8
0000            125   _REG01CN        DATA 0xc9
0000            126   _TMR2RLL        DATA 0xca
0000            127   _TMR5RLL        DATA 0xca
0000            128   _TMR2RLH        DATA 0xcb
0000            129   _TMR5RLH        DATA 0xcb
0000            130   _TMR2L          DATA 0xcc
0000            131   _TMR5L          DATA 0xcc
0000            132   _TMR2H          DATA 0xcd
0000            133   _TMR5H          DATA 0xcd
0000            134   _SMB0ADM        DATA 0xce
0000            135   _SMB1ADM        DATA 0xce
0000            136   _SMB0ADR        DATA 0xcf
0000            137   _SMB1ADR        DATA 0xcf
0000            138   _PSW            DATA 0xd0
0000            139   _REF0CN         DATA 0xd1
0000            140   _SCON1          DATA 0xd2
0000            141   _SBUF1          DATA 0xd3
0000            142   _P0SKIP         DATA 0xd4
0000            143   _P1SKIP         DATA 0xd5
0000            144   _P2SKIP         DATA 0xd6
0000            145   _USB0XCN        DATA 0xd7
0000            146   _PCA0CN         DATA 0xd8
0000            147   _PCA0MD         DATA 0xd9
0000            148   _PCA0CPM0       DATA 0xda
0000            149   _PCA0CPM1       DATA 0xdb
0000            150   _PCA0CPM2       DATA 0xdc
0000            151   _PCA0CPM3       DATA 0xdd
0000            152   _PCA0CPM4       DATA 0xde
0000            153   _P3SKIP         DATA 0xdf
0000            154   _ACC            DATA 0xe0
0000            155   _XBR0           DATA 0xe1
0000            156   _XBR1           DATA 0xe2
0000            157   _XBR2           DATA 0xe3
0000            158   _IT01CF         DATA 0xe4
0000            159   _CKCON1         DATA 0xe4
0000            160   _SMOD1          DATA 0xe5
0000            161   _EIE1           DATA 0xe6
0000            162   _EIE2           DATA 0xe7
0000            163   _ADC0CN         DATA 0xe8
0000            164   _PCA0CPL1       DATA 0xe9
0000            165   _PCA0CPH1       DATA 0xea
0000            166   _PCA0CPL2       DATA 0xeb
0000            167   _PCA0CPH2       DATA 0xec
0000            168   _PCA0CPL3       DATA 0xed
0000            169   _PCA0CPH3       DATA 0xee
0000            170   _RSTSRC         DATA 0xef
0000            171   _B              DATA 0xf0
0000            172   _P0MDIN         DATA 0xf1
0000            173   _P1MDIN         DATA 0xf2
0000            174   _P2MDIN         DATA 0xf3
0000            175   _P3MDIN         DATA 0xf4
0000            176   _P4MDIN         DATA 0xf5
0000            177   _EIP1           DATA 0xf6
0000            178   _EIP2           DATA 0xf7
0000            179   _SPI0CN         DATA 0xf8
0000            180   _PCA0L          DATA 0xf9
0000            181   _PCA0H          DATA 0xfa
0000            182   _PCA0CPL0       DATA 0xfb
0000            183   _PCA0CPH0       DATA 0xfc
0000            184   _PCA0CPL4       DATA 0xfd
0000            185   _PCA0CPH4       DATA 0xfe
0000            186   _VDM0CN         DATA 0xff
0000            187   _DPTR           DATA 0x8382
0000            188   _TMR2RL         DATA 0xcbca
0000            189   _TMR3RL         DATA 0x9392
0000            190   _TMR4RL         DATA 0x9392
0000            191   _TMR5RL         DATA 0xcbca
0000            192   _TMR2           DATA 0xcdcc
0000            193   _TMR3           DATA 0x9594
0000            194   _TMR4           DATA 0x9594
0000            195   _TMR5           DATA 0xcdcc
0000            196   _SBRL1          DATA 0xb5b4
0000            197   _ADC0           DATA 0xbebd
0000            198   _ADC0GT         DATA 0xc4c3
0000            199   _ADC0LT         DATA 0xc6c5
0000            200   _PCA0           DATA 0xfaf9
0000            201   _PCA0CP1        DATA 0xeae9
0000            202   _PCA0CP2        DATA 0xeceb
0000            203   _PCA0CP3        DATA 0xeeed
0000            204   _PCA0CP0        DATA 0xfcfb
0000            205   _PCA0CP4        DATA 0xfefd
0000            206   ;--------------------------------------------------------
0000            207   ; special function bits
0000            208   ;--------------------------------------------------------
0000            209   _P0_0           BIT 0x80
0000            210   _P0_1           BIT 0x81
0000            211   _P0_2           BIT 0x82
0000            212   _P0_3           BIT 0x83
0000            213   _P0_4           BIT 0x84
0000            214   _P0_5           BIT 0x85
0000            215   _P0_6           BIT 0x86
0000            216   _P0_7           BIT 0x87
0000            217   _TF1            BIT 0x8f
0000            218   _TR1            BIT 0x8e
0000            219   _TF0            BIT 0x8d
0000            220   _TR0            BIT 0x8c
0000            221   _IE1            BIT 0x8b
0000            222   _IT1            BIT 0x8a
0000            223   _IE0            BIT 0x89
0000            224   _IT0            BIT 0x88
0000            225   _P1_0           BIT 0x90
0000            226   _P1_1           BIT 0x91
0000            227   _P1_2           BIT 0x92
0000            228   _P1_3           BIT 0x93
0000            229   _P1_4           BIT 0x94
0000            230   _P1_5           BIT 0x95
0000            231   _P1_6           BIT 0x96
0000            232   _P1_7           BIT 0x97
0000            233   _S0MODE         BIT 0x9f
0000            234   _SCON0_6        BIT 0x9e
0000            235   _MCE0           BIT 0x9d
0000            236   _REN0           BIT 0x9c
0000            237   _TB80           BIT 0x9b
0000            238   _RB80           BIT 0x9a
0000            239   _TI0            BIT 0x99
0000            240   _RI0            BIT 0x98
0000            241   _SCON_6         BIT 0x9e
0000            242   _MCE            BIT 0x9d
0000            243   _REN            BIT 0x9c
0000            244   _TB8            BIT 0x9b
0000            245   _RB8            BIT 0x9a
0000            246   _TI             BIT 0x99
0000            247   _RI             BIT 0x98
0000            248   _P2_0           BIT 0xa0
0000            249   _P2_1           BIT 0xa1
0000            250   _P2_2           BIT 0xa2
0000            251   _P2_3           BIT 0xa3
0000            252   _P2_4           BIT 0xa4
0000            253   _P2_5           BIT 0xa5
0000            254   _P2_6           BIT 0xa6
0000            255   _P2_7           BIT 0xa7
0000            256   _EA             BIT 0xaf
0000            257   _ESPI0          BIT 0xae
0000            258   _ET2            BIT 0xad
0000            259   _ES0            BIT 0xac
0000            260   _ET1            BIT 0xab
0000            261   _EX1            BIT 0xaa
0000            262   _ET0            BIT 0xa9
0000            263   _EX0            BIT 0xa8
0000            264   _P3_0           BIT 0xb0
0000            265   _P3_1           BIT 0xb1
0000            266   _P3_2           BIT 0xb2
0000            267   _P3_3           BIT 0xb3
0000            268   _P3_4           BIT 0xb4
0000            269   _P3_5           BIT 0xb5
0000            270   _P3_6           BIT 0xb6
0000            271   _P3_7           BIT 0xb7
0000            272   _IP_7           BIT 0xbf
0000            273   _PSPI0          BIT 0xbe
0000            274   _PT2            BIT 0xbd
0000            275   _PS0            BIT 0xbc
0000            276   _PT1            BIT 0xbb
0000            277   _PX1            BIT 0xba
0000            278   _PT0            BIT 0xb9
0000            279   _PX0            BIT 0xb8
0000            280   _MASTER0        BIT 0xc7
0000            281   _TXMODE0        BIT 0xc6
0000            282   _STA0           BIT 0xc5
0000            283   _STO0           BIT 0xc4
0000            284   _ACKRQ0         BIT 0xc3
0000            285   _ARBLOST0       BIT 0xc2
0000            286   _ACK0           BIT 0xc1
0000            287   _SI0            BIT 0xc0
0000            288   _MASTER1        BIT 0xc7
0000            289   _TXMODE1        BIT 0xc6
0000            290   _STA1           BIT 0xc5
0000            291   _STO1           BIT 0xc4
0000            292   _ACKRQ1         BIT 0xc3
0000            293   _ARBLOST1       BIT 0xc2
0000            294   _ACK1           BIT 0xc1
0000            295   _SI1            BIT 0xc0
0000            296   _TF2            BIT 0xcf
0000            297   _TF2H           BIT 0xcf
0000            298   _TF2L           BIT 0xce
0000            299   _TF2LEN         BIT 0xcd
0000            300   _TF2CEN         BIT 0xcc
0000            301   _T2SPLIT        BIT 0xcb
0000            302   _TR2            BIT 0xca
0000            303   _T2CSS          BIT 0xc9
0000            304   _T2XCLK         BIT 0xc8
0000            305   _TF5H           BIT 0xcf
0000            306   _TF5L           BIT 0xce
0000            307   _TF5LEN         BIT 0xcd
0000            308   _TMR5CN_4       BIT 0xcc
0000            309   _T5SPLIT        BIT 0xcb
0000            310   _TR5            BIT 0xca
0000            311   _TMR5CN_1       BIT 0xc9
0000            312   _T5XCLK         BIT 0xc8
0000            313   _CY             BIT 0xd7
0000            314   _AC             BIT 0xd6
0000            315   _F0             BIT 0xd5
0000            316   _RS1            BIT 0xd4
0000            317   _RS0            BIT 0xd3
0000            318   _OV             BIT 0xd2
0000            319   _F1             BIT 0xd1
0000            320   _PARITY         BIT 0xd0
0000            321   _CF             BIT 0xdf
0000            322   _CR             BIT 0xde
0000            323   _PCA0CN_5       BIT 0xde
0000            324   _CCF4           BIT 0xdc
0000            325   _CCF3           BIT 0xdb
0000            326   _CCF2           BIT 0xda
0000            327   _CCF1           BIT 0xd9
0000            328   _CCF0           BIT 0xd8
0000            329   _ACC_7          BIT 0xe7
0000            330   _ACC_6          BIT 0xe6
0000            331   _ACC_5          BIT 0xe5
0000            332   _ACC_4          BIT 0xe4
0000            333   _ACC_3          BIT 0xe3
0000            334   _ACC_2          BIT 0xe2
0000            335   _ACC_1          BIT 0xe1
0000            336   _ACC_0          BIT 0xe0
0000            337   _AD0EN          BIT 0xef
0000            338   _AD0TM          BIT 0xee
0000            339   _AD0INT         BIT 0xed
0000            340   _AD0BUSY        BIT 0xec
0000            341   _AD0WINT        BIT 0xeb
0000            342   _AD0CM2         BIT 0xea
0000            343   _AD0CM1         BIT 0xe9
0000            344   _AD0CM0         BIT 0xe8
0000            345   _B_7            BIT 0xf7
0000            346   _B_6            BIT 0xf6
0000            347   _B_5            BIT 0xf5
0000            348   _B_4            BIT 0xf4
0000            349   _B_3            BIT 0xf3
0000            350   _B_2            BIT 0xf2
0000            351   _B_1            BIT 0xf1
0000            352   _B_0            BIT 0xf0
0000            353   _SPIF           BIT 0xff
0000            354   _WCOL           BIT 0xfe
0000            355   _MODF           BIT 0xfd
0000            356   _RXOVRN         BIT 0xfc
0000            357   _NSSMD1         BIT 0xfb
0000            358   _NSSMD0         BIT 0xfa
0000            359   _TXBMT          BIT 0xf9
0000            360   _SPIEN          BIT 0xf8
0000            361   ;--------------------------------------------------------
0000            362   ; overlayable register banks
0000            363   ;--------------------------------------------------------
0000            364            rbank0 segment data overlay
0000            365   ;--------------------------------------------------------
0000            366   ; internal ram data
0000            367   ;--------------------------------------------------------
0000            368            rseg R_DSEG
0000            369   _pwm_count:
0000            370            ds 1
0001            371   _PWM1:
0001            372            ds 2
0003            373   _PWM2:
0003            374            ds 2
0005            375   _PWM3:
0005            376            ds 2
0007            377   _PWM4:
0007            378            ds 2
0009            379   _UART1_Init_sloc0_1_0:
0009            380            ds 4
000D            381   ;--------------------------------------------------------
000D            382   ; overlayable items in internal ram 
000D            383   ;--------------------------------------------------------
0000            384            rseg    R_OSEG
0000            385            rseg    R_OSEG
0000            386   ;--------------------------------------------------------
0000            387   ; indirectly addressable internal ram data
0000            388   ;--------------------------------------------------------
0000            389            rseg R_ISEG
0000            390   ;--------------------------------------------------------
0000            391   ; absolute internal ram data
0000            392   ;--------------------------------------------------------
0000            393            DSEG
0000            394   ;--------------------------------------------------------
0000            395   ; bit data
0000            396   ;--------------------------------------------------------
0000            397            rseg R_BSEG
0000            398   _Timer2_ISR_sloc0_1_0:
0000            399            DBIT    1
0001            400   ;--------------------------------------------------------
0001            401   ; paged external ram data
0001            402   ;--------------------------------------------------------
0000            403            rseg R_PSEG
0000            404   ;--------------------------------------------------------
0000            405   ; external ram data
0000            406   ;--------------------------------------------------------
0000            407            rseg R_XSEG
0000            408   ;--------------------------------------------------------
0000            409   ; absolute external ram data
0000            410   ;--------------------------------------------------------
0000            411            XSEG
0000            412   ;--------------------------------------------------------
0000            413   ; external initialized ram data
0000            414   ;--------------------------------------------------------
0000            415            rseg R_IXSEG
0000            416            rseg R_HOME
0000            417            rseg R_GSINIT
0000            418            rseg R_CSEG
0000            419   ;--------------------------------------------------------
0000            420   ; Reset entry point and interrupt vectors
0000            421   ;--------------------------------------------------------
0000            422            CSEG at 0x0000
0000 020100     423            ljmp    _crt0
002B            424            CSEG at 0x002b
002B 020100     425            ljmp    _Timer2_ISR
002E            426   ;--------------------------------------------------------
002E            427   ; global & static initialisations
002E            428   ;--------------------------------------------------------
0000            429            rseg R_HOME
0000            430            rseg R_GSINIT
0000            431            rseg R_GSINIT
0000            432   ;--------------------------------------------------------
0000            433   ; data variables initialization
0000            434   ;--------------------------------------------------------
0000            435            rseg R_DINIT
0000            436   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:34: volatile unsigned char pwm_count=0;
0000 754000     437            mov     _pwm_count,#0x00
0003            438   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:35: volatile int PWM1 = 0;
0003 E4         439            clr     a
0004 F500       440            mov     _PWM1,a
0006 F501       441            mov     (_PWM1 + 1),a
0008            442   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:36: volatile int PWM2 = 0;
0008 E4         443            clr     a
0009 F5C0       444            mov     _PWM2,a
000B F5C1       445            mov     (_PWM2 + 1),a
000D            446   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:37: volatile int PWM3 = 0;
000D E4         447            clr     a
000E F580       448            mov     _PWM3,a
0010 F581       449            mov     (_PWM3 + 1),a
0012            450   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:38: volatile int PWM4 = 0;
0012 E4         451            clr     a
0013 F540       452            mov     _PWM4,a
0015 F541       453            mov     (_PWM4 + 1),a
0017            454            ; The linker places a 'ret' at the end of segment R_DINIT.
0017            455   ;--------------------------------------------------------
0017            456   ; code
0017            457   ;--------------------------------------------------------
0000            458            rseg R_CSEG
0000            459   ;------------------------------------------------------------
0000            460   ;Allocation info for local variables in function '_c51_external_startup'
0000            461   ;------------------------------------------------------------
0000            462   ;------------------------------------------------------------
0000            463   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:40: char _c51_external_startup (void)
0000            464   ;        -----------------------------------------
0000            465   ;         function _c51_external_startup
0000            466   ;        -----------------------------------------
0000            467   __c51_external_startup:
0000            468            using   0
0000            469   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:42: PCA0MD&=(~0x40) ;  // DISABLE WDT: clear Watchdog Enable bit
0000 53D9BF     470            anl     _PCA0MD,#0xBF
0003            471   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:43: VDM0CN=0x80;       // Enable VDD monitor
0003 75FF80     472            mov     _VDM0CN,#0x80
0006            473   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:44: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
0006 75EF06     474            mov     _RSTSRC,#0x06
0009            475   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:52: CLKSEL|=0b_0000_0011; // SYSCLK derived from the Internal High-Frequency Oscillator / 1.
0009 43A903     476            orl     _CLKSEL,#0x03
000C            477   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:56: OSCICN |= 0x03; // Configure internal oscillator for its maximum frequency
000C 43B203     478            orl     _OSCICN,#0x03
000F            479   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:59: TH1 = 0x10000-((SYSCLK/BAUDRATE)/2L);
000F 758D30     480            mov     _TH1,#0x30
0012            481   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:60: CKCON &= ~0x0B;                  // T1M = 1; SCA1:0 = xx
0012 538EF4     482            anl     _CKCON,#0xF4
0015            483   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:61: CKCON |=  0x08;
0015 438E08     484            orl     _CKCON,#0x08
0018            485   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:75: TL1 = TH1;     // Init timer 1
0018 858D8B     486            mov     _TL1,_TH1
001B            487   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:76: TMOD &= 0x0f;  // Mask out timer 1 bits
001B 53890F     488            anl     _TMOD,#0x0F
001E            489   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:77: TMOD |= 0x20;  // TMOD: timer 1 in 8-bit autoreload                     
001E 438920     490            orl     _TMOD,#0x20
0021            491   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:78: TR1 = 1;       // Start timer1
0021 D28E       492            setb    _TR1
0023            493   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:79: SCON = 0x52;
0023 759852     494            mov     _SCON,#0x52
0026            495   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:82: P0MDOUT = 0x10;           // Enable Uart TX as push-pull output
0026 75A410     496            mov     _P0MDOUT,#0x10
0029            497   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:83: P2MDOUT |= 0b0000_0110;   // Make the LED (P2.2) a push-pull output.  P2.1 used for debuging.
0029 43A606     498            orl     _P2MDOUT,#0x06
002C            499   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:84: XBR0 = 0b0000_0101;       // Enable SMBus pins and UART pins P0.4(TX) and P0.5(RX)
002C 75E105     500            mov     _XBR0,#0x05
002F            501   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:85: XBR1 = 0x40;              // Enable crossbar and weak pull-ups
002F 75E240     502            mov     _XBR1,#0x40
0032            503   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:88: CKCON |= 0x04; // Timer0 clock source = SYSCLK
0032 438E04     504            orl     _CKCON,#0x04
0035            505   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:89: TMOD &= 0xf0;  // Mask out timer 1 bits
0035 5389F0     506            anl     _TMOD,#0xF0
0038            507   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:90: TMOD |= 0x02;  // Timer0 in 8-bit auto-reload mode
0038 438902     508            orl     _TMOD,#0x02
003B            509   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:92: TL0 = TH0 = 256-(SYSCLK/SMB_FREQUENCY/3);
003B 758C60     510            mov     _TH0,#0x60
003E 758A60     511            mov     _TL0,#0x60
0041            512   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:93: TR0 = 1; // Enable timer 0
0041 D28C       513            setb    _TR0
0043            514   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:96: SMB0CF = INH | EXTHOLD | SMBTOE | SMBFTE ;
0043 75C15C     515            mov     _SMB0CF,#0x5C
0046            516   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:97: SMB0CF |= ENSMB;  // Enable SMBus
0046 43C180     517            orl     _SMB0CF,#0x80
0049            518   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:99: LED = LED_OFF;
0049 D2A2       519            setb    _P2_2
004B            520   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:102: TMR2CN=0x00;   // Stop Timer2; Clear TF2;
004B 75C800     521            mov     _TMR2CN,#0x00
004E            522   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:103: CKCON|=0b_0001_0000;
004E 438E10     523            orl     _CKCON,#0x10
0051            524   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:104: TMR2RL=(-(SYSCLK/(2*48))/(100L)); // Initialize reload value
0051 75CA78     525            mov     _TMR2RL,#0x78
0054 75CBEC     526            mov     (_TMR2RL >> 8),#0xEC
0057            527   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:105: TMR2=0xffff;   // Set to reload immediately
0057 75CCFF     528            mov     _TMR2,#0xFF
005A 75CDFF     529            mov     (_TMR2 >> 8),#0xFF
005D            530   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:106: ET2=1;         // Enable Timer2 interrupts
005D D2AD       531            setb    _ET2
005F            532   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:107: TR2=1;         // Start Timer2
005F D2CA       533            setb    _TR2
0061            534   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:109: EA=1; // Enable interrupts
0061 D2AF       535            setb    _EA
0063            536   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:111: return 0;
0063 758200     537            mov     dpl,#0x00
0066 22         538            ret
0067            539   ;------------------------------------------------------------
0067            540   ;Allocation info for local variables in function 'Timer2_ISR'
0067            541   ;------------------------------------------------------------
0067            542   ;temp_fix                  Allocated to registers r2 
0067            543   ;------------------------------------------------------------
0067            544   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:114: void Timer2_ISR (void) interrupt 5
0067            545   ;        -----------------------------------------
0067            546   ;         function Timer2_ISR
0067            547   ;        -----------------------------------------
0067            548   _Timer2_ISR:
0067 C0E0       549            push    acc
0069 C0F0       550            push    b
006B C002       551            push    ar2
006D C003       552            push    ar3
006F C004       553            push    ar4
0071 C0D0       554            push    psw
0073 75D000     555            mov     psw,#0x00
0076            556   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:118: temp_fix = SFRPAGE;
0076 AABF       557            mov     r2,_SFRPAGE
0078            558   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:120: SFRPAGE = 0;
0078 75BF00     559            mov     _SFRPAGE,#0x00
007B            560   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:122: TF2H = 0; // Clear Timer2 interrupt flag
007B C2CF       561            clr     _TF2H
007D            562   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:124: pwm_count++;
007D 0540       563            inc     _pwm_count
007F            564   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:125: if(pwm_count>100) pwm_count=0;
007F E540       565            mov     a,_pwm_count
0081 249B       566            add     a,#0xff - 0x64
0083 5001       567            jnc     L003002?
0085 754000     568            mov     _pwm_count,#0x00
0088            569   L003002?:
0088            570   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:127: OUT0=pwm_count>PWM1?0:1;
0088 AB40       571            mov     r3,_pwm_count
008A 7C00       572            mov     r4,#0x00
008C C3         573            clr     c
008D E500       574            mov     a,_PWM1
008F 9B         575            subb    a,r3
0090 E501       576            mov     a,(_PWM1 + 1)
0092 6480       577            xrl     a,#0x80
0094 8CF0       578            mov     b,r4
0096 63F080     579            xrl     b,#0x80
0099 95F0       580            subb    a,b
009B 9248       581            mov  _Timer2_ISR_sloc0_1_0,c
009D B3         582            cpl     c
009E 92A0       583            mov     _P2_0,c
00A0            584   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:128: OUT1=pwm_count>PWM2?0:1;
00A0 AB40       585            mov     r3,_pwm_count
00A2 7C00       586            mov     r4,#0x00
00A4 C3         587            clr     c
00A5 E5C0       588            mov     a,_PWM2
00A7 9B         589            subb    a,r3
00A8 E5C1       590            mov     a,(_PWM2 + 1)
00AA 6480       591            xrl     a,#0x80
00AC 8CF0       592            mov     b,r4
00AE 63F080     593            xrl     b,#0x80
00B1 95F0       594            subb    a,b
00B3 9248       595            mov  _Timer2_ISR_sloc0_1_0,c
00B5 B3         596            cpl     c
00B6 92A1       597            mov     _P2_1,c
00B8            598   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:129: OUT2=pwm_count>PWM3?0:1;
00B8 AB40       599            mov     r3,_pwm_count
00BA 7C00       600            mov     r4,#0x00
00BC C3         601            clr     c
00BD E580       602            mov     a,_PWM3
00BF 9B         603            subb    a,r3
00C0 E581       604            mov     a,(_PWM3 + 1)
00C2 6480       605            xrl     a,#0x80
00C4 8CF0       606            mov     b,r4
00C6 63F080     607            xrl     b,#0x80
00C9 95F0       608            subb    a,b
00CB 9248       609            mov  _Timer2_ISR_sloc0_1_0,c
00CD B3         610            cpl     c
00CE 92A2       611            mov     _P2_2,c
00D0            612   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:130: OUT3=pwm_count>PWM4?0:1;
00D0 AB40       613            mov     r3,_pwm_count
00D2 7C00       614            mov     r4,#0x00
00D4 C3         615            clr     c
00D5 E540       616            mov     a,_PWM4
00D7 9B         617            subb    a,r3
00D8 E541       618            mov     a,(_PWM4 + 1)
00DA 6480       619            xrl     a,#0x80
00DC 8CF0       620            mov     b,r4
00DE 63F080     621            xrl     b,#0x80
00E1 95F0       622            subb    a,b
00E3 9248       623            mov  _Timer2_ISR_sloc0_1_0,c
00E5 B3         624            cpl     c
00E6 92A3       625            mov     _P2_3,c
00E8            626   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:132: SFRPAGE = temp_fix;
00E8 8ABF       627            mov     _SFRPAGE,r2
00EA D0D0       628            pop     psw
00EC D004       629            pop     ar4
00EE D003       630            pop     ar3
00F0 D002       631            pop     ar2
00F2 D0F0       632            pop     b
00F4 D0E0       633            pop     acc
00F6 32         634            reti
00F7            635   ;        eliminated unneeded push/pop dpl
00F7            636   ;        eliminated unneeded push/pop dph
00F7            637   ;------------------------------------------------------------
00F7            638   ;Allocation info for local variables in function 'Timer4ms'
00F7            639   ;------------------------------------------------------------
00F7            640   ;ms                        Allocated to registers r2 
00F7            641   ;i                         Allocated to registers r4 
00F7            642   ;k                         Allocated to registers r3 
00F7            643   ;------------------------------------------------------------
00F7            644   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:136: void Timer4ms(unsigned char ms)
00F7            645   ;        -----------------------------------------
00F7            646   ;         function Timer4ms
00F7            647   ;        -----------------------------------------
00F7            648   _Timer4ms:
00F7 AA82       649            mov     r2,dpl
00F9            650   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:141: k=SFRPAGE;
00F9 ABBF       651            mov     r3,_SFRPAGE
00FB            652   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:142: SFRPAGE=0xf;
00FB 75BF0F     653            mov     _SFRPAGE,#0x0F
00FE            654   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:144: CKCON1|=0b_0000_0001;
00FE 43E401     655            orl     _CKCON1,#0x01
0101            656   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:146: TMR4RL = 65536-(SYSCLK/1000L); // Set Timer4 to overflow in 1 ms.
0101 759280     657            mov     _TMR4RL,#0x80
0104 759344     658            mov     (_TMR4RL >> 8),#0x44
0107            659   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:147: TMR4 = TMR4RL;                 // Initialize Timer4 for first overflow
0107 859294     660            mov     _TMR4,_TMR4RL
010A 859395     661            mov     (_TMR4 >> 8),(_TMR4RL >> 8)
010D            662   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:149: TMR4CN = 0x04;                 // Start Timer4 and clear overflow flag
010D 759104     663            mov     _TMR4CN,#0x04
0110            664   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:150: for (i = 0; i < ms; i++)       // Count <ms> overflows
0110 7C00       665            mov     r4,#0x00
0112            666   L004004?:
0112 C3         667            clr     c
0113 EC         668            mov     a,r4
0114 9A         669            subb    a,r2
0115 5001       670            jnc     L004007?
0117            671   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:152: while (!(TMR4CN & 0x80));  // Wait for overflow
0117            672   L004001?:
0117 E591       673            mov     a,_TMR4CN
0119 30E788     674            jnb     acc.7,L004001?
011C            675   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:153: TMR4CN &= ~(0x80);         // Clear overflow indicator
011C 53917F     676            anl     _TMR4CN,#0x7F
011F            677   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:150: for (i = 0; i < ms; i++)       // Count <ms> overflows
011F 0C         678            inc     r4
0120 8001       679            sjmp    L004004?
0122            680   L004007?:
0122            681   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:155: TMR4CN = 0 ;                   // Stop Timer4 and clear overflow flag
0122 759100     682            mov     _TMR4CN,#0x00
0125            683   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:156: SFRPAGE=k;        
0125 8BBF       684            mov     _SFRPAGE,r3
0127 22         685            ret
0128            686   ;------------------------------------------------------------
0128            687   ;Allocation info for local variables in function 'UART1_Init'
0128            688   ;------------------------------------------------------------
0128            689   ;baudrate                  Allocated to registers r2 r3 r4 r5 
0128            690   ;sloc0                     Allocated with name '_UART1_Init_sloc0_1_0'
0128            691   ;------------------------------------------------------------
0128            692   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:159: void UART1_Init (unsigned long baudrate)
0128            693   ;        -----------------------------------------
0128            694   ;         function UART1_Init
0128            695   ;        -----------------------------------------
0128            696   _UART1_Init:
0128 AA82       697            mov     r2,dpl
012A AB83       698            mov     r3,dph
012C ACF0       699            mov     r4,b
012E FD         700            mov     r5,a
012F            701   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:161: SMOD1 = 0x0C; // no parity, 8 data bits, 1 stop bit
012F 75E50C     702            mov     _SMOD1,#0x0C
0132            703   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:162: SCON1 = 0x10;
0132 75D210     704            mov     _SCON1,#0x10
0135            705   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:163: if (((SYSCLK/baudrate)/2L)/0xFFFFL < 1){
0135 8A00       706            mov     __divulong_PARM_2,r2
0137 8B01       707            mov     (__divulong_PARM_2 + 1),r3
0139 8C02       708            mov     (__divulong_PARM_2 + 2),r4
013B 8D03       709            mov     (__divulong_PARM_2 + 3),r5
013D 906C00     710            mov     dptr,#0x6C00
0140 75F0DC     711            mov     b,#0xDC
0143 7402       712            mov     a,#0x02
0145 120100     713            lcall   __divulong
0148 AA82       714            mov     r2,dpl
014A AB83       715            mov     r3,dph
014C ACF0       716            mov     r4,b
014E C3         717            clr     c
014F 13         718            rrc     a
0150 F5FB       719            mov     (_UART1_Init_sloc0_1_0 + 3),a
0152 EC         720            mov     a,r4
0153 13         721            rrc     a
0154 F5FA       722            mov     (_UART1_Init_sloc0_1_0 + 2),a
0156 EB         723            mov     a,r3
0157 13         724            rrc     a
0158 F5F9       725            mov     (_UART1_Init_sloc0_1_0 + 1),a
015A EA         726            mov     a,r2
015B 13         727            rrc     a
015C F5F8       728            mov     _UART1_Init_sloc0_1_0,a
015E 7500FF     729            mov     __divulong_PARM_2,#0xFF
0161 7501FF     730            mov     (__divulong_PARM_2 + 1),#0xFF
0164 750200     731            mov     (__divulong_PARM_2 + 2),#0x00
0167 750300     732            mov     (__divulong_PARM_2 + 3),#0x00
016A 85F882     733            mov     dpl,_UART1_Init_sloc0_1_0
016D 85F983     734            mov     dph,(_UART1_Init_sloc0_1_0 + 1)
0170 85FAF0     735            mov     b,(_UART1_Init_sloc0_1_0 + 2)
0173 E5FB       736            mov     a,(_UART1_Init_sloc0_1_0 + 3)
0175 120100     737            lcall   __divulong
0178 AE82       738            mov     r6,dpl
017A AF83       739            mov     r7,dph
017C A8F0       740            mov     r0,b
017E F9         741            mov     r1,a
017F C3         742            clr     c
0180 EE         743            mov     a,r6
0181 9401       744            subb    a,#0x01
0183 EF         745            mov     a,r7
0184 9400       746            subb    a,#0x00
0186 E8         747            mov     a,r0
0187 9400       748            subb    a,#0x00
0189 E9         749            mov     a,r1
018A 9400       750            subb    a,#0x00
018C 5001       751            jnc     L005008?
018E            752   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:164: SBRL1 = 0x10000L-((SYSCLK/baudrate)/2L);
018E E4         753            clr     a
018F C3         754            clr     c
0190 95F8       755            subb    a,_UART1_Init_sloc0_1_0
0192 FA         756            mov     r2,a
0193 E4         757            clr     a
0194 95F9       758            subb    a,(_UART1_Init_sloc0_1_0 + 1)
0196 FB         759            mov     r3,a
0197 7401       760            mov     a,#0x01
0199 95FA       761            subb    a,(_UART1_Init_sloc0_1_0 + 2)
019B FC         762            mov     r4,a
019C E4         763            clr     a
019D 95FB       764            subb    a,(_UART1_Init_sloc0_1_0 + 3)
019F FD         765            mov     r5,a
01A0 8AB4       766            mov     _SBRL1,r2
01A2 8BB5       767            mov     (_SBRL1 >> 8),r3
01A4            768   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:165: SBCON1 |= 0x03; // set prescaler to 1
01A4 43AC03     769            orl     _SBCON1,#0x03
01A7 020100     770            ljmp    L005009?
01AA            771   L005008?:
01AA            772   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:167: else if (((SYSCLK/baudrate)/2L)/0xFFFFL < 4){
01AA C3         773            clr     c
01AB EE         774            mov     a,r6
01AC 9404       775            subb    a,#0x04
01AE EF         776            mov     a,r7
01AF 9400       777            subb    a,#0x00
01B1 E8         778            mov     a,r0
01B2 9400       779            subb    a,#0x00
01B4 E9         780            mov     a,r1
01B5 9400       781            subb    a,#0x00
01B7 5001       782            jnc     L005005?
01B9            783   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:168: SBRL1 = 0x10000L-(((SYSCLK/baudrate)/2L)/4L);
01B9 E5FB       784            mov     a,(_UART1_Init_sloc0_1_0 + 3)
01BB C3         785            clr     c
01BC 13         786            rrc     a
01BD FD         787            mov     r5,a
01BE E5FA       788            mov     a,(_UART1_Init_sloc0_1_0 + 2)
01C0 13         789            rrc     a
01C1 FC         790            mov     r4,a
01C2 E5F9       791            mov     a,(_UART1_Init_sloc0_1_0 + 1)
01C4 13         792            rrc     a
01C5 FB         793            mov     r3,a
01C6 E5F8       794            mov     a,_UART1_Init_sloc0_1_0
01C8 13         795            rrc     a
01C9 FA         796            mov     r2,a
01CA ED         797            mov     a,r5
01CB C3         798            clr     c
01CC 13         799            rrc     a
01CD FD         800            mov     r5,a
01CE EC         801            mov     a,r4
01CF 13         802            rrc     a
01D0 FC         803            mov     r4,a
01D1 EB         804            mov     a,r3
01D2 13         805            rrc     a
01D3 FB         806            mov     r3,a
01D4 EA         807            mov     a,r2
01D5 13         808            rrc     a
01D6 FA         809            mov     r2,a
01D7 E4         810            clr     a
01D8 C3         811            clr     c
01D9 9A         812            subb    a,r2
01DA FA         813            mov     r2,a
01DB E4         814            clr     a
01DC 9B         815            subb    a,r3
01DD FB         816            mov     r3,a
01DE 7401       817            mov     a,#0x01
01E0 9C         818            subb    a,r4
01E1 FC         819            mov     r4,a
01E2 E4         820            clr     a
01E3 9D         821            subb    a,r5
01E4 FD         822            mov     r5,a
01E5 8AB4       823            mov     _SBRL1,r2
01E7 8BB5       824            mov     (_SBRL1 >> 8),r3
01E9            825   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:169: SBCON1 &= ~0x03;
01E9 53ACFC     826            anl     _SBCON1,#0xFC
01EC            827   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:170: SBCON1 |= 0x01; // set prescaler to 4
01EC 43AC01     828            orl     _SBCON1,#0x01
01EF 020100     829            ljmp    L005009?
01F2            830   L005005?:
01F2            831   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:172: else if (((SYSCLK/baudrate)/2L)/0xFFFFL < 12){
01F2 C3         832            clr     c
01F3 EE         833            mov     a,r6
01F4 940C       834            subb    a,#0x0C
01F6 EF         835            mov     a,r7
01F7 9400       836            subb    a,#0x00
01F9 E8         837            mov     a,r0
01FA 9400       838            subb    a,#0x00
01FC E9         839            mov     a,r1
01FD 9400       840            subb    a,#0x00
01FF 5001       841            jnc     L005002?
0201            842   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:173: SBRL1 = 0x10000L-(((SYSCLK/baudrate)/2L)/12L);
0201 75000C     843            mov     __divulong_PARM_2,#0x0C
0204 E4         844            clr     a
0205 F501       845            mov     (__divulong_PARM_2 + 1),a
0207 F502       846            mov     (__divulong_PARM_2 + 2),a
0209 F503       847            mov     (__divulong_PARM_2 + 3),a
020B 85F882     848            mov     dpl,_UART1_Init_sloc0_1_0
020E 85F983     849            mov     dph,(_UART1_Init_sloc0_1_0 + 1)
0211 85FAF0     850            mov     b,(_UART1_Init_sloc0_1_0 + 2)
0214 E5FB       851            mov     a,(_UART1_Init_sloc0_1_0 + 3)
0216 120100     852            lcall   __divulong
0219 AA82       853            mov     r2,dpl
021B AB83       854            mov     r3,dph
021D ACF0       855            mov     r4,b
021F FD         856            mov     r5,a
0220 E4         857            clr     a
0221 C3         858            clr     c
0222 9A         859            subb    a,r2
0223 FA         860            mov     r2,a
0224 E4         861            clr     a
0225 9B         862            subb    a,r3
0226 FB         863            mov     r3,a
0227 7401       864            mov     a,#0x01
0229 9C         865            subb    a,r4
022A FC         866            mov     r4,a
022B E4         867            clr     a
022C 9D         868            subb    a,r5
022D FD         869            mov     r5,a
022E 8AB4       870            mov     _SBRL1,r2
0230 8BB5       871            mov     (_SBRL1 >> 8),r3
0232            872   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:174: SBCON1 &= ~0x03; // set prescaler to 12
0232 53ACFC     873            anl     _SBCON1,#0xFC
0235 8001       874            sjmp    L005009?
0237            875   L005002?:
0237            876   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:177: SBRL1 = 0x10000L-(((SYSCLK/baudrate)/2L)/48L);
0237 750030     877            mov     __divulong_PARM_2,#0x30
023A E4         878            clr     a
023B F501       879            mov     (__divulong_PARM_2 + 1),a
023D F502       880            mov     (__divulong_PARM_2 + 2),a
023F F503       881            mov     (__divulong_PARM_2 + 3),a
0241 85F882     882            mov     dpl,_UART1_Init_sloc0_1_0
0244 85F983     883            mov     dph,(_UART1_Init_sloc0_1_0 + 1)
0247 85FAF0     884            mov     b,(_UART1_Init_sloc0_1_0 + 2)
024A E5FB       885            mov     a,(_UART1_Init_sloc0_1_0 + 3)
024C 120100     886            lcall   __divulong
024F AA82       887            mov     r2,dpl
0251 AB83       888            mov     r3,dph
0253 ACF0       889            mov     r4,b
0255 FD         890            mov     r5,a
0256 E4         891            clr     a
0257 C3         892            clr     c
0258 9A         893            subb    a,r2
0259 FA         894            mov     r2,a
025A E4         895            clr     a
025B 9B         896            subb    a,r3
025C FB         897            mov     r3,a
025D 7401       898            mov     a,#0x01
025F 9C         899            subb    a,r4
0260 FC         900            mov     r4,a
0261 E4         901            clr     a
0262 9D         902            subb    a,r5
0263 FD         903            mov     r5,a
0264 8AB4       904            mov     _SBRL1,r2
0266 8BB5       905            mov     (_SBRL1 >> 8),r3
0268            906   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:178: SBCON1 &= ~0x03;
0268 53ACFC     907            anl     _SBCON1,#0xFC
026B            908   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:179: SBCON1 |= 0x02; // set prescaler to ?
026B 43AC02     909            orl     _SBCON1,#0x02
026E            910   L005009?:
026E            911   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:181: SCON1 |= 0x02; // indicate ready for TX
026E 43D202     912            orl     _SCON1,#0x02
0271            913   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:182: SBCON1 |= 0x40; // enable baud rate generator
0271 43AC40     914            orl     _SBCON1,#0x40
0274            915   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:184: XBR2=0x01; // Enable UART1 on P0.0(TX1) and P0.1(RX1)
0274 75E301     916            mov     _XBR2,#0x01
0277            917   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:185: XBR1=0x40; // Enable crossbar and weak pull-ups
0277 75E240     918            mov     _XBR1,#0x40
027A 22         919            ret
027B            920   ;------------------------------------------------------------
027B            921   ;Allocation info for local variables in function 'putchar1'
027B            922   ;------------------------------------------------------------
027B            923   ;c                         Allocated to registers r2 
027B            924   ;------------------------------------------------------------
027B            925   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:188: void putchar1 (char c)
027B            926   ;        -----------------------------------------
027B            927   ;         function putchar1
027B            928   ;        -----------------------------------------
027B            929   _putchar1:
027B AA82       930            mov     r2,dpl
027D            931   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:190: if (c == '\n' )
027D BA0A98     932            cjne    r2,#0x0A,L006006?
0280            933   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:192: while (!(SCON1 & 0x02));
0280            934   L006001?:
0280 E5D2       935            mov     a,_SCON1
0282 30E1D8     936            jnb     acc.1,L006001?
0285            937   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:193: SCON1 &= ~0x02;
0285 53D2FD     938            anl     _SCON1,#0xFD
0288            939   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:194: SBUF1 = '\r' ;
0288 75D30D     940            mov     _SBUF1,#0x0D
028B            941   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:196: while (!(SCON1 & 0x02));
028B            942   L006006?:
028B E5D2       943            mov     a,_SCON1
028D 30E198     944            jnb     acc.1,L006006?
0290            945   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:197: SCON1 &= ~0x02;
0290 53D2FD     946            anl     _SCON1,#0xFD
0293            947   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:198: SBUF1 = c;
0293 8AD3       948            mov     _SBUF1,r2
0295 22         949            ret
0296            950   ;------------------------------------------------------------
0296            951   ;Allocation info for local variables in function 'getchar1'
0296            952   ;------------------------------------------------------------
0296            953   ;c                         Allocated to registers 
0296            954   ;------------------------------------------------------------
0296            955   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:201: char getchar1 (void)
0296            956   ;        -----------------------------------------
0296            957   ;         function getchar1
0296            958   ;        -----------------------------------------
0296            959   _getchar1:
0296            960   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:204: printf("12  ");
0296 7418       961            mov     a,#__str_0
0298 C0E0       962            push    acc
029A 7496       963            mov     a,#(__str_0 >> 8)
029C C0E0       964            push    acc
029E 7480       965            mov     a,#0x80
02A0 C0E0       966            push    acc
02A2 120100     967            lcall   _printf
02A5 1581       968            dec     sp
02A7 1581       969            dec     sp
02A9 1581       970            dec     sp
02AB            971   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:205: while (!(SCON1 & 0x01));
02AB            972   L007001?:
02AB E5D2       973            mov     a,_SCON1
02AD 30E0D8     974            jnb     acc.0,L007001?
02B0            975   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:206: printf("13  ");
02B0 7418       976            mov     a,#__str_1
02B2 C0E0       977            push    acc
02B4 7497       978            mov     a,#(__str_1 >> 8)
02B6 C0E0       979            push    acc
02B8 7480       980            mov     a,#0x80
02BA C0E0       981            push    acc
02BC 120100     982            lcall   _printf
02BF 1581       983            dec     sp
02C1 1581       984            dec     sp
02C3 1581       985            dec     sp
02C5            986   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:207: SCON1 &= ~0x01;
02C5 53D2FE     987            anl     _SCON1,#0xFE
02C8            988   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:208: c = SBUF1;
02C8 85D382     989            mov     dpl,_SBUF1
02CB            990   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:209: return (c);
02CB 22         991            ret
02CC            992   ;------------------------------------------------------------
02CC            993   ;Allocation info for local variables in function 'main'
02CC            994   ;------------------------------------------------------------
02CC            995   ;direction                 Allocated to registers r2 
02CC            996   ;------------------------------------------------------------
02CC            997   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:212: void main (void)
02CC            998   ;        -----------------------------------------
02CC            999   ;         function main
02CC           1000   ;        -----------------------------------------
02CC           1001   _main:
02CC           1002   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:215: UART1_Init(BAUDRATE);
02CC 90C200    1003            mov     dptr,#0xC200
02CF 75F001    1004            mov     b,#0x01
02D2 E4        1005            clr     a
02D3 120100    1006            lcall   _UART1_Init
02D6           1007   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:217: while(1)
02D6           1008   L008014?:
02D6           1009   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:219: direction = getchar1();
02D6 120100    1010            lcall   _getchar1
02D9 AA82      1011            mov     r2,dpl
02DB           1012   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:220: SCON1 |= 0x01;
02DB 43D201    1013            orl     _SCON1,#0x01
02DE           1014   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:221: printf("Received: %c\n",direction);
02DE EA        1015            mov     a,r2
02DF FB        1016            mov     r3,a
02E0 33        1017            rlc     a
02E1 95E0      1018            subb    a,acc
02E3 FC        1019            mov     r4,a
02E4 C002      1020            push    ar2
02E6 C003      1021            push    ar3
02E8 C004      1022            push    ar4
02EA 7498      1023            mov     a,#__str_2
02EC C0E0      1024            push    acc
02EE 7497      1025            mov     a,#(__str_2 >> 8)
02F0 C0E0      1026            push    acc
02F2 7480      1027            mov     a,#0x80
02F4 C0E0      1028            push    acc
02F6 120100    1029            lcall   _printf
02F9 E581      1030            mov     a,sp
02FB 24FB      1031            add     a,#0xfb
02FD F581      1032            mov     sp,a
02FF D002      1033            pop     ar2
0301           1034   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:224: if(direction=='u'){
0301 BA75D8    1035            cjne    r2,#0x75,L008011?
0304           1036   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:225: PWM2 = 100;
0304 75C064    1037            mov     _PWM2,#0x64
0307 E4        1038            clr     a
0308 F5C1      1039            mov     (_PWM2 + 1),a
030A           1040   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:226: PWM4 = 100;
030A 754064    1041            mov     _PWM4,#0x64
030D E4        1042            clr     a
030E F541      1043            mov     (_PWM4 + 1),a
0310           1044   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:227: PWM1 = 0;
0310           1045   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:228: PWM3 = 0;
0310 E4        1046            clr     a
0311 F500      1047            mov     _PWM1,a
0313 F501      1048            mov     (_PWM1 + 1),a
0315 F580      1049            mov     _PWM3,a
0317 F581      1050            mov     (_PWM3 + 1),a
0319 8001      1051            sjmp    L008012?
031B           1052   L008011?:
031B           1053   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:230: else if(direction=='d'){
031B BA6458    1054            cjne    r2,#0x64,L008008?
031E           1055   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:231: PWM1 = 100;
031E 750064    1056            mov     _PWM1,#0x64
0321 E4        1057            clr     a
0322 F501      1058            mov     (_PWM1 + 1),a
0324           1059   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:232: PWM3 = 100;
0324 758064    1060            mov     _PWM3,#0x64
0327 E4        1061            clr     a
0328 F581      1062            mov     (_PWM3 + 1),a
032A           1063   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:233: PWM2 = 0;
032A           1064   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:234: PWM4 = 0;
032A E4        1065            clr     a
032B F5C0      1066            mov     _PWM2,a
032D F5C1      1067            mov     (_PWM2 + 1),a
032F F540      1068            mov     _PWM4,a
0331 F541      1069            mov     (_PWM4 + 1),a
0333 8001      1070            sjmp    L008012?
0335           1071   L008008?:
0335           1072   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:237: else if (direction=='r'){
0335 BA7298    1073            cjne    r2,#0x72,L008005?
0338           1074   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:238: PWM1 = 100;
0338 750064    1075            mov     _PWM1,#0x64
033B E4        1076            clr     a
033C F501      1077            mov     (_PWM1 + 1),a
033E           1078   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:239: PWM4 = 100;
033E 754064    1079            mov     _PWM4,#0x64
0341 E4        1080            clr     a
0342 F541      1081            mov     (_PWM4 + 1),a
0344           1082   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:240: PWM2 = 0;
0344           1083   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:241: PWM3 = 0;
0344 E4        1084            clr     a
0345 F5C0      1085            mov     _PWM2,a
0347 F5C1      1086            mov     (_PWM2 + 1),a
0349 F580      1087            mov     _PWM3,a
034B F581      1088            mov     (_PWM3 + 1),a
034D 8001      1089            sjmp    L008012?
034F           1090   L008005?:
034F           1091   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:244: else if(direction=='l'){
034F BA6CD8    1092            cjne    r2,#0x6C,L008002?
0352           1093   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:245: PWM2 = 100;
0352 75C064    1094            mov     _PWM2,#0x64
0355 E4        1095            clr     a
0356 F5C1      1096            mov     (_PWM2 + 1),a
0358           1097   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:246: PWM3 = 100;
0358 758064    1098            mov     _PWM3,#0x64
035B E4        1099            clr     a
035C F581      1100            mov     (_PWM3 + 1),a
035E           1101   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:247: PWM1 = 0;
035E           1102   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:248: PWM4 = 0;
035E E4        1103            clr     a
035F F500      1104            mov     _PWM1,a
0361 F501      1105            mov     (_PWM1 + 1),a
0363 F540      1106            mov     _PWM4,a
0365 F541      1107            mov     (_PWM4 + 1),a
0367 8001      1108            sjmp    L008012?
0369           1109   L008002?:
0369           1110   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:251: PWM2 = 0;
0369           1111   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:252: PWM3 = 0;
0369           1112   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:253: PWM1 = 0;
0369           1113   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:254: PWM4 = 0;
0369 E4        1114            clr     a
036A F5C0      1115            mov     _PWM2,a
036C F5C1      1116            mov     (_PWM2 + 1),a
036E F580      1117            mov     _PWM3,a
0370 F581      1118            mov     (_PWM3 + 1),a
0372 F500      1119            mov     _PWM1,a
0374 F501      1120            mov     (_PWM1 + 1),a
0376 F540      1121            mov     _PWM4,a
0378 F541      1122            mov     (_PWM4 + 1),a
037A           1123   L008012?:
037A           1124   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:265: printf("%d %d %d %d\r", PWM1, PWM2, PWM3, PWM4);
037A C040      1125            push    _PWM4
037C C041      1126            push    (_PWM4 + 1)
037E C080      1127            push    _PWM3
0380 C081      1128            push    (_PWM3 + 1)
0382 C0C0      1129            push    _PWM2
0384 C0C1      1130            push    (_PWM2 + 1)
0386 C000      1131            push    _PWM1
0388 C001      1132            push    (_PWM1 + 1)
038A 7418      1133            mov     a,#__str_3
038C C0E0      1134            push    acc
038E 7499      1135            mov     a,#(__str_3 >> 8)
0390 C0E0      1136            push    acc
0392 7480      1137            mov     a,#0x80
0394 C0E0      1138            push    acc
0396 120100    1139            lcall   _printf
0399 E581      1140            mov     a,sp
039B 24F5      1141            add     a,#0xf5
039D F581      1142            mov     sp,a
039F           1143   ;        C:\Users\viral\Documents\uni stuff\291\project 2\motor_control_FINAL_receiving.c:267: Timer4ms(100);
039F 758264    1144            mov     dpl,#0x64
03A2 120100    1145            lcall   _Timer4ms
03A5 020100    1146            ljmp    L008014?
03A8           1147            rseg R_CSEG
03A8           1148   
0000           1149            rseg R_XINIT
0000           1150   
0000           1151            rseg R_CONST
0000           1152   __str_0:
0000 31322020  1153            db '12  '
0004 00        1154            db 0x00
0005           1155   __str_1:
0005 31332020  1156            db '13  '
0009 00        1157            db 0x00
000A           1158   __str_2:
000A 52656365  1159            db 'Received: %c'
     69766564
     3A202563
0016 0A        1160            db 0x0A
0017 00        1161            db 0x00
0018           1162   __str_3:
0018 25642025  1163            db '%d %d %d %d'
     64202564
     202564
0023 0D        1164            db 0x0D
0024 00        1165            db 0x00
0025           1166   
002E           1167            CSEG
002E           1168   
002E           1169   end
