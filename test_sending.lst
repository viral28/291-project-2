0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Thu Mar 24 17:59:53 2016
0000              5   ;--------------------------------------------------------
                  5   $name test_sending
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _main
0000             27            public _nunchuck_getdata
0000             28            public _nunchuck_init
0000             29            public _getchar1
0000             30            public _putchar1
0000             31            public _UART1_Init
0000             32            public _I2C_stop
0000             33            public _I2C_start
0000             34            public _I2C_read
0000             35            public _I2C_write
0000             36            public _Timer4ms
0000             37            public _Timer2_ISR
0000             38            public __c51_external_startup
0000             39            public _nunchuck_init_PARM_1
0000             40            public _PWM4
0000             41            public _PWM3
0000             42            public _PWM2
0000             43            public _PWM1
0000             44            public _pwm_count
0000             45   ;--------------------------------------------------------
0000             46   ; Special Function Registers
0000             47   ;--------------------------------------------------------
0000             48   _P0             DATA 0x80
0000             49   _SP             DATA 0x81
0000             50   _DPL            DATA 0x82
0000             51   _DPH            DATA 0x83
0000             52   _EMI0TC         DATA 0x84
0000             53   _EMI0CF         DATA 0x85
0000             54   _OSCLCN         DATA 0x86
0000             55   _PCON           DATA 0x87
0000             56   _TCON           DATA 0x88
0000             57   _TMOD           DATA 0x89
0000             58   _TL0            DATA 0x8a
0000             59   _TL1            DATA 0x8b
0000             60   _TH0            DATA 0x8c
0000             61   _TH1            DATA 0x8d
0000             62   _CKCON          DATA 0x8e
0000             63   _PSCTL          DATA 0x8f
0000             64   _P1             DATA 0x90
0000             65   _TMR3CN         DATA 0x91
0000             66   _TMR4CN         DATA 0x91
0000             67   _TMR3RLL        DATA 0x92
0000             68   _TMR4RLL        DATA 0x92
0000             69   _TMR3RLH        DATA 0x93
0000             70   _TMR4RLH        DATA 0x93
0000             71   _TMR3L          DATA 0x94
0000             72   _TMR4L          DATA 0x94
0000             73   _TMR3H          DATA 0x95
0000             74   _TMR4H          DATA 0x95
0000             75   _USB0ADR        DATA 0x96
0000             76   _USB0DAT        DATA 0x97
0000             77   _SCON           DATA 0x98
0000             78   _SCON0          DATA 0x98
0000             79   _SBUF           DATA 0x99
0000             80   _SBUF0          DATA 0x99
0000             81   _CPT1CN         DATA 0x9a
0000             82   _CPT0CN         DATA 0x9b
0000             83   _CPT1MD         DATA 0x9c
0000             84   _CPT0MD         DATA 0x9d
0000             85   _CPT1MX         DATA 0x9e
0000             86   _CPT0MX         DATA 0x9f
0000             87   _P2             DATA 0xa0
0000             88   _SPI0CFG        DATA 0xa1
0000             89   _SPI0CKR        DATA 0xa2
0000             90   _SPI0DAT        DATA 0xa3
0000             91   _P0MDOUT        DATA 0xa4
0000             92   _P1MDOUT        DATA 0xa5
0000             93   _P2MDOUT        DATA 0xa6
0000             94   _P3MDOUT        DATA 0xa7
0000             95   _IE             DATA 0xa8
0000             96   _CLKSEL         DATA 0xa9
0000             97   _EMI0CN         DATA 0xaa
0000             98   __XPAGE         DATA 0xaa
0000             99   _SBCON1         DATA 0xac
0000            100   _P4MDOUT        DATA 0xae
0000            101   _PFE0CN         DATA 0xaf
0000            102   _P3             DATA 0xb0
0000            103   _OSCXCN         DATA 0xb1
0000            104   _OSCICN         DATA 0xb2
0000            105   _OSCICL         DATA 0xb3
0000            106   _SBRLL1         DATA 0xb4
0000            107   _SBRLH1         DATA 0xb5
0000            108   _FLSCL          DATA 0xb6
0000            109   _FLKEY          DATA 0xb7
0000            110   _IP             DATA 0xb8
0000            111   _CLKMUL         DATA 0xb9
0000            112   _SMBTC          DATA 0xb9
0000            113   _AMX0N          DATA 0xba
0000            114   _AMX0P          DATA 0xbb
0000            115   _ADC0CF         DATA 0xbc
0000            116   _ADC0L          DATA 0xbd
0000            117   _ADC0H          DATA 0xbe
0000            118   _SFRPAGE        DATA 0xbf
0000            119   _SMB0CN         DATA 0xc0
0000            120   _SMB1CN         DATA 0xc0
0000            121   _SMB0CF         DATA 0xc1
0000            122   _SMB1CF         DATA 0xc1
0000            123   _SMB0DAT        DATA 0xc2
0000            124   _SMB1DAT        DATA 0xc2
0000            125   _ADC0GTL        DATA 0xc3
0000            126   _ADC0GTH        DATA 0xc4
0000            127   _ADC0LTL        DATA 0xc5
0000            128   _ADC0LTH        DATA 0xc6
0000            129   _P4             DATA 0xc7
0000            130   _TMR2CN         DATA 0xc8
0000            131   _TMR5CN         DATA 0xc8
0000            132   _REG01CN        DATA 0xc9
0000            133   _TMR2RLL        DATA 0xca
0000            134   _TMR5RLL        DATA 0xca
0000            135   _TMR2RLH        DATA 0xcb
0000            136   _TMR5RLH        DATA 0xcb
0000            137   _TMR2L          DATA 0xcc
0000            138   _TMR5L          DATA 0xcc
0000            139   _TMR2H          DATA 0xcd
0000            140   _TMR5H          DATA 0xcd
0000            141   _SMB0ADM        DATA 0xce
0000            142   _SMB1ADM        DATA 0xce
0000            143   _SMB0ADR        DATA 0xcf
0000            144   _SMB1ADR        DATA 0xcf
0000            145   _PSW            DATA 0xd0
0000            146   _REF0CN         DATA 0xd1
0000            147   _SCON1          DATA 0xd2
0000            148   _SBUF1          DATA 0xd3
0000            149   _P0SKIP         DATA 0xd4
0000            150   _P1SKIP         DATA 0xd5
0000            151   _P2SKIP         DATA 0xd6
0000            152   _USB0XCN        DATA 0xd7
0000            153   _PCA0CN         DATA 0xd8
0000            154   _PCA0MD         DATA 0xd9
0000            155   _PCA0CPM0       DATA 0xda
0000            156   _PCA0CPM1       DATA 0xdb
0000            157   _PCA0CPM2       DATA 0xdc
0000            158   _PCA0CPM3       DATA 0xdd
0000            159   _PCA0CPM4       DATA 0xde
0000            160   _P3SKIP         DATA 0xdf
0000            161   _ACC            DATA 0xe0
0000            162   _XBR0           DATA 0xe1
0000            163   _XBR1           DATA 0xe2
0000            164   _XBR2           DATA 0xe3
0000            165   _IT01CF         DATA 0xe4
0000            166   _CKCON1         DATA 0xe4
0000            167   _SMOD1          DATA 0xe5
0000            168   _EIE1           DATA 0xe6
0000            169   _EIE2           DATA 0xe7
0000            170   _ADC0CN         DATA 0xe8
0000            171   _PCA0CPL1       DATA 0xe9
0000            172   _PCA0CPH1       DATA 0xea
0000            173   _PCA0CPL2       DATA 0xeb
0000            174   _PCA0CPH2       DATA 0xec
0000            175   _PCA0CPL3       DATA 0xed
0000            176   _PCA0CPH3       DATA 0xee
0000            177   _RSTSRC         DATA 0xef
0000            178   _B              DATA 0xf0
0000            179   _P0MDIN         DATA 0xf1
0000            180   _P1MDIN         DATA 0xf2
0000            181   _P2MDIN         DATA 0xf3
0000            182   _P3MDIN         DATA 0xf4
0000            183   _P4MDIN         DATA 0xf5
0000            184   _EIP1           DATA 0xf6
0000            185   _EIP2           DATA 0xf7
0000            186   _SPI0CN         DATA 0xf8
0000            187   _PCA0L          DATA 0xf9
0000            188   _PCA0H          DATA 0xfa
0000            189   _PCA0CPL0       DATA 0xfb
0000            190   _PCA0CPH0       DATA 0xfc
0000            191   _PCA0CPL4       DATA 0xfd
0000            192   _PCA0CPH4       DATA 0xfe
0000            193   _VDM0CN         DATA 0xff
0000            194   _DPTR           DATA 0x8382
0000            195   _TMR2RL         DATA 0xcbca
0000            196   _TMR3RL         DATA 0x9392
0000            197   _TMR4RL         DATA 0x9392
0000            198   _TMR5RL         DATA 0xcbca
0000            199   _TMR2           DATA 0xcdcc
0000            200   _TMR3           DATA 0x9594
0000            201   _TMR4           DATA 0x9594
0000            202   _TMR5           DATA 0xcdcc
0000            203   _SBRL1          DATA 0xb5b4
0000            204   _ADC0           DATA 0xbebd
0000            205   _ADC0GT         DATA 0xc4c3
0000            206   _ADC0LT         DATA 0xc6c5
0000            207   _PCA0           DATA 0xfaf9
0000            208   _PCA0CP1        DATA 0xeae9
0000            209   _PCA0CP2        DATA 0xeceb
0000            210   _PCA0CP3        DATA 0xeeed
0000            211   _PCA0CP0        DATA 0xfcfb
0000            212   _PCA0CP4        DATA 0xfefd
0000            213   ;--------------------------------------------------------
0000            214   ; special function bits
0000            215   ;--------------------------------------------------------
0000            216   _P0_0           BIT 0x80
0000            217   _P0_1           BIT 0x81
0000            218   _P0_2           BIT 0x82
0000            219   _P0_3           BIT 0x83
0000            220   _P0_4           BIT 0x84
0000            221   _P0_5           BIT 0x85
0000            222   _P0_6           BIT 0x86
0000            223   _P0_7           BIT 0x87
0000            224   _TF1            BIT 0x8f
0000            225   _TR1            BIT 0x8e
0000            226   _TF0            BIT 0x8d
0000            227   _TR0            BIT 0x8c
0000            228   _IE1            BIT 0x8b
0000            229   _IT1            BIT 0x8a
0000            230   _IE0            BIT 0x89
0000            231   _IT0            BIT 0x88
0000            232   _P1_0           BIT 0x90
0000            233   _P1_1           BIT 0x91
0000            234   _P1_2           BIT 0x92
0000            235   _P1_3           BIT 0x93
0000            236   _P1_4           BIT 0x94
0000            237   _P1_5           BIT 0x95
0000            238   _P1_6           BIT 0x96
0000            239   _P1_7           BIT 0x97
0000            240   _S0MODE         BIT 0x9f
0000            241   _SCON0_6        BIT 0x9e
0000            242   _MCE0           BIT 0x9d
0000            243   _REN0           BIT 0x9c
0000            244   _TB80           BIT 0x9b
0000            245   _RB80           BIT 0x9a
0000            246   _TI0            BIT 0x99
0000            247   _RI0            BIT 0x98
0000            248   _SCON_6         BIT 0x9e
0000            249   _MCE            BIT 0x9d
0000            250   _REN            BIT 0x9c
0000            251   _TB8            BIT 0x9b
0000            252   _RB8            BIT 0x9a
0000            253   _TI             BIT 0x99
0000            254   _RI             BIT 0x98
0000            255   _P2_0           BIT 0xa0
0000            256   _P2_1           BIT 0xa1
0000            257   _P2_2           BIT 0xa2
0000            258   _P2_3           BIT 0xa3
0000            259   _P2_4           BIT 0xa4
0000            260   _P2_5           BIT 0xa5
0000            261   _P2_6           BIT 0xa6
0000            262   _P2_7           BIT 0xa7
0000            263   _EA             BIT 0xaf
0000            264   _ESPI0          BIT 0xae
0000            265   _ET2            BIT 0xad
0000            266   _ES0            BIT 0xac
0000            267   _ET1            BIT 0xab
0000            268   _EX1            BIT 0xaa
0000            269   _ET0            BIT 0xa9
0000            270   _EX0            BIT 0xa8
0000            271   _P3_0           BIT 0xb0
0000            272   _P3_1           BIT 0xb1
0000            273   _P3_2           BIT 0xb2
0000            274   _P3_3           BIT 0xb3
0000            275   _P3_4           BIT 0xb4
0000            276   _P3_5           BIT 0xb5
0000            277   _P3_6           BIT 0xb6
0000            278   _P3_7           BIT 0xb7
0000            279   _IP_7           BIT 0xbf
0000            280   _PSPI0          BIT 0xbe
0000            281   _PT2            BIT 0xbd
0000            282   _PS0            BIT 0xbc
0000            283   _PT1            BIT 0xbb
0000            284   _PX1            BIT 0xba
0000            285   _PT0            BIT 0xb9
0000            286   _PX0            BIT 0xb8
0000            287   _MASTER0        BIT 0xc7
0000            288   _TXMODE0        BIT 0xc6
0000            289   _STA0           BIT 0xc5
0000            290   _STO0           BIT 0xc4
0000            291   _ACKRQ0         BIT 0xc3
0000            292   _ARBLOST0       BIT 0xc2
0000            293   _ACK0           BIT 0xc1
0000            294   _SI0            BIT 0xc0
0000            295   _MASTER1        BIT 0xc7
0000            296   _TXMODE1        BIT 0xc6
0000            297   _STA1           BIT 0xc5
0000            298   _STO1           BIT 0xc4
0000            299   _ACKRQ1         BIT 0xc3
0000            300   _ARBLOST1       BIT 0xc2
0000            301   _ACK1           BIT 0xc1
0000            302   _SI1            BIT 0xc0
0000            303   _TF2            BIT 0xcf
0000            304   _TF2H           BIT 0xcf
0000            305   _TF2L           BIT 0xce
0000            306   _TF2LEN         BIT 0xcd
0000            307   _TF2CEN         BIT 0xcc
0000            308   _T2SPLIT        BIT 0xcb
0000            309   _TR2            BIT 0xca
0000            310   _T2CSS          BIT 0xc9
0000            311   _T2XCLK         BIT 0xc8
0000            312   _TF5H           BIT 0xcf
0000            313   _TF5L           BIT 0xce
0000            314   _TF5LEN         BIT 0xcd
0000            315   _TMR5CN_4       BIT 0xcc
0000            316   _T5SPLIT        BIT 0xcb
0000            317   _TR5            BIT 0xca
0000            318   _TMR5CN_1       BIT 0xc9
0000            319   _T5XCLK         BIT 0xc8
0000            320   _CY             BIT 0xd7
0000            321   _AC             BIT 0xd6
0000            322   _F0             BIT 0xd5
0000            323   _RS1            BIT 0xd4
0000            324   _RS0            BIT 0xd3
0000            325   _OV             BIT 0xd2
0000            326   _F1             BIT 0xd1
0000            327   _PARITY         BIT 0xd0
0000            328   _CF             BIT 0xdf
0000            329   _CR             BIT 0xde
0000            330   _PCA0CN_5       BIT 0xde
0000            331   _CCF4           BIT 0xdc
0000            332   _CCF3           BIT 0xdb
0000            333   _CCF2           BIT 0xda
0000            334   _CCF1           BIT 0xd9
0000            335   _CCF0           BIT 0xd8
0000            336   _ACC_7          BIT 0xe7
0000            337   _ACC_6          BIT 0xe6
0000            338   _ACC_5          BIT 0xe5
0000            339   _ACC_4          BIT 0xe4
0000            340   _ACC_3          BIT 0xe3
0000            341   _ACC_2          BIT 0xe2
0000            342   _ACC_1          BIT 0xe1
0000            343   _ACC_0          BIT 0xe0
0000            344   _AD0EN          BIT 0xef
0000            345   _AD0TM          BIT 0xee
0000            346   _AD0INT         BIT 0xed
0000            347   _AD0BUSY        BIT 0xec
0000            348   _AD0WINT        BIT 0xeb
0000            349   _AD0CM2         BIT 0xea
0000            350   _AD0CM1         BIT 0xe9
0000            351   _AD0CM0         BIT 0xe8
0000            352   _B_7            BIT 0xf7
0000            353   _B_6            BIT 0xf6
0000            354   _B_5            BIT 0xf5
0000            355   _B_4            BIT 0xf4
0000            356   _B_3            BIT 0xf3
0000            357   _B_2            BIT 0xf2
0000            358   _B_1            BIT 0xf1
0000            359   _B_0            BIT 0xf0
0000            360   _SPIF           BIT 0xff
0000            361   _WCOL           BIT 0xfe
0000            362   _MODF           BIT 0xfd
0000            363   _RXOVRN         BIT 0xfc
0000            364   _NSSMD1         BIT 0xfb
0000            365   _NSSMD0         BIT 0xfa
0000            366   _TXBMT          BIT 0xf9
0000            367   _SPIEN          BIT 0xf8
0000            368   ;--------------------------------------------------------
0000            369   ; overlayable register banks
0000            370   ;--------------------------------------------------------
0000            371            rbank0 segment data overlay
0000            372   ;--------------------------------------------------------
0000            373   ; internal ram data
0000            374   ;--------------------------------------------------------
0000            375            rseg R_DSEG
0000            376   _pwm_count:
0000            377            ds 1
0001            378   _PWM1:
0001            379            ds 2
0003            380   _PWM2:
0003            381            ds 2
0005            382   _PWM3:
0005            383            ds 2
0007            384   _PWM4:
0007            385            ds 2
0009            386   _UART1_Init_sloc0_1_0:
0009            387            ds 4
000D            388   _nunchuck_init_buf_1_91:
000D            389            ds 6
0013            390   _nunchuck_init_sloc0_1_0:
0013            391            ds 2
0015            392   _nunchuck_init_sloc1_1_0:
0015            393            ds 2
0017            394   _nunchuck_init_sloc2_1_0:
0017            395            ds 2
0019            396   _main_rbuf_1_98:
0019            397            ds 6
001F            398   _main_joy_x_1_98:
001F            399            ds 2
0021            400   _main_joy_y_1_98:
0021            401            ds 2
0023            402   _main_off_x_1_98:
0023            403            ds 2
0025            404   _main_off_y_1_98:
0025            405            ds 2
0027            406   _main_acc_y_1_98:
0027            407            ds 2
0029            408   _main_acc_z_1_98:
0029            409            ds 2
002B            410   _main_sloc0_1_0:
002B            411            ds 1
002C            412   ;--------------------------------------------------------
002C            413   ; overlayable items in internal ram 
002C            414   ;--------------------------------------------------------
0000            415            rseg    R_OSEG
0000            416            rseg    R_OSEG
0000            417            rseg    R_OSEG
0000            418            rseg    R_OSEG
0000            419            rseg    R_OSEG
0000            420   ;--------------------------------------------------------
0000            421   ; indirectly addressable internal ram data
0000            422   ;--------------------------------------------------------
0000            423            rseg R_ISEG
0000            424   ;--------------------------------------------------------
0000            425   ; absolute internal ram data
0000            426   ;--------------------------------------------------------
0000            427            DSEG
0000            428   ;--------------------------------------------------------
0000            429   ; bit data
0000            430   ;--------------------------------------------------------
0000            431            rseg R_BSEG
0000            432   _nunchuck_init_PARM_1:
0000            433            DBIT    1
0001            434   _main_but1_1_98:
0001            435            DBIT    1
0002            436   _main_but2_1_98:
0002            437            DBIT    1
0003            438   ;--------------------------------------------------------
0003            439   ; paged external ram data
0003            440   ;--------------------------------------------------------
0000            441            rseg R_PSEG
0000            442   ;--------------------------------------------------------
0000            443   ; external ram data
0000            444   ;--------------------------------------------------------
0000            445            rseg R_XSEG
0000            446   ;--------------------------------------------------------
0000            447   ; absolute external ram data
0000            448   ;--------------------------------------------------------
0000            449            XSEG
0000            450   ;--------------------------------------------------------
0000            451   ; external initialized ram data
0000            452   ;--------------------------------------------------------
0000            453            rseg R_IXSEG
0000            454            rseg R_HOME
0000            455            rseg R_GSINIT
0000            456            rseg R_CSEG
0000            457   ;--------------------------------------------------------
0000            458   ; Reset entry point and interrupt vectors
0000            459   ;--------------------------------------------------------
0000            460            CSEG at 0x0000
0000 020100     461            ljmp    _crt0
002B            462            CSEG at 0x002b
002B 020100     463            ljmp    _Timer2_ISR
002E            464   ;--------------------------------------------------------
002E            465   ; global & static initialisations
002E            466   ;--------------------------------------------------------
0000            467            rseg R_HOME
0000            468            rseg R_GSINIT
0000            469            rseg R_GSINIT
0000            470   ;--------------------------------------------------------
0000            471   ; data variables initialization
0000            472   ;--------------------------------------------------------
0000            473            rseg R_DINIT
0000            474   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:34: volatile unsigned char pwm_count=0;
0000 758000     475            mov     _pwm_count,#0x00
0003            476   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:35: volatile int PWM1 = 0;
0003 E4         477            clr     a
0004 F540       478            mov     _PWM1,a
0006 F541       479            mov     (_PWM1 + 1),a
0008            480   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:36: volatile int PWM2 = 0;
0008 E4         481            clr     a
0009 F500       482            mov     _PWM2,a
000B F501       483            mov     (_PWM2 + 1),a
000D            484   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:37: volatile int PWM3 = 0;
000D E4         485            clr     a
000E F5C0       486            mov     _PWM3,a
0010 F5C1       487            mov     (_PWM3 + 1),a
0012            488   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:38: volatile int PWM4 = 0;
0012 E4         489            clr     a
0013 F580       490            mov     _PWM4,a
0015 F581       491            mov     (_PWM4 + 1),a
0017            492            ; The linker places a 'ret' at the end of segment R_DINIT.
0017            493   ;--------------------------------------------------------
0017            494   ; code
0017            495   ;--------------------------------------------------------
0000            496            rseg R_CSEG
0000            497   ;------------------------------------------------------------
0000            498   ;Allocation info for local variables in function '_c51_external_startup'
0000            499   ;------------------------------------------------------------
0000            500   ;------------------------------------------------------------
0000            501   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:40: char _c51_external_startup (void)
0000            502   ;        -----------------------------------------
0000            503   ;         function _c51_external_startup
0000            504   ;        -----------------------------------------
0000            505   __c51_external_startup:
0000            506            using   0
0000            507   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:42: PCA0MD&=(~0x40) ;  // DISABLE WDT: clear Watchdog Enable bit
0000 53D9BF     508            anl     _PCA0MD,#0xBF
0003            509   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:43: VDM0CN=0x80;       // Enable VDD monitor
0003 75FF80     510            mov     _VDM0CN,#0x80
0006            511   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:44: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
0006 75EF06     512            mov     _RSTSRC,#0x06
0009            513   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:52: CLKSEL|=0b_0000_0011; // SYSCLK derived from the Internal High-Frequency Oscillator / 1.
0009 43A903     514            orl     _CLKSEL,#0x03
000C            515   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:56: OSCICN |= 0x03; // Configure internal oscillator for its maximum frequency
000C 43B203     516            orl     _OSCICN,#0x03
000F            517   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:59: TH1 = 0x10000-((SYSCLK/BAUDRATE)/2L);
000F 758D30     518            mov     _TH1,#0x30
0012            519   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:60: CKCON &= ~0x0B;                  // T1M = 1; SCA1:0 = xx
0012 538EF4     520            anl     _CKCON,#0xF4
0015            521   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:61: CKCON |=  0x08;
0015 438E08     522            orl     _CKCON,#0x08
0018            523   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:75: TL1 = TH1;     // Init timer 1
0018 858D8B     524            mov     _TL1,_TH1
001B            525   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:76: TMOD &= 0x0f;  // Mask out timer 1 bits
001B 53890F     526            anl     _TMOD,#0x0F
001E            527   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:77: TMOD |= 0x20;  // TMOD: timer 1 in 8-bit autoreload                     
001E 438920     528            orl     _TMOD,#0x20
0021            529   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:78: TR1 = 1;       // Start timer1
0021 D28E       530            setb    _TR1
0023            531   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:79: SCON = 0x52;
0023 759852     532            mov     _SCON,#0x52
0026            533   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:82: P0MDOUT = 0x10;           // Enable Uart TX as push-pull output
0026 75A410     534            mov     _P0MDOUT,#0x10
0029            535   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:83: P2MDOUT |= 0b0000_0110;   // Make the LED (P2.2) a push-pull output.  P2.1 used for debuging.
0029 43A606     536            orl     _P2MDOUT,#0x06
002C            537   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:84: XBR0 = 0b0000_0101;       // Enable SMBus pins and UART pins P0.4(TX) and P0.5(RX)
002C 75E105     538            mov     _XBR0,#0x05
002F            539   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:85: XBR1 = 0x40;              // Enable crossbar and weak pull-ups
002F 75E240     540            mov     _XBR1,#0x40
0032            541   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:88: CKCON |= 0x04; // Timer0 clock source = SYSCLK
0032 438E04     542            orl     _CKCON,#0x04
0035            543   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:89: TMOD &= 0xf0;  // Mask out timer 1 bits
0035 5389F0     544            anl     _TMOD,#0xF0
0038            545   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:90: TMOD |= 0x02;  // Timer0 in 8-bit auto-reload mode
0038 438902     546            orl     _TMOD,#0x02
003B            547   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:92: TL0 = TH0 = 256-(SYSCLK/SMB_FREQUENCY/3);
003B 758C60     548            mov     _TH0,#0x60
003E 758A60     549            mov     _TL0,#0x60
0041            550   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:93: TR0 = 1; // Enable timer 0
0041 D28C       551            setb    _TR0
0043            552   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:96: SMB0CF = INH | EXTHOLD | SMBTOE | SMBFTE ;
0043 75C15C     553            mov     _SMB0CF,#0x5C
0046            554   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:97: SMB0CF |= ENSMB;  // Enable SMBus
0046 43C180     555            orl     _SMB0CF,#0x80
0049            556   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:99: LED = LED_OFF;
0049 D2A2       557            setb    _P2_2
004B            558   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:102: TMR2CN=0x00;   // Stop Timer2; Clear TF2;
004B 75C800     559            mov     _TMR2CN,#0x00
004E            560   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:103: CKCON|=0b_0001_0000;
004E 438E10     561            orl     _CKCON,#0x10
0051            562   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:104: TMR2RL=(-(SYSCLK/(2*48))/(100L)); // Initialize reload value
0051 75CA78     563            mov     _TMR2RL,#0x78
0054 75CBEC     564            mov     (_TMR2RL >> 8),#0xEC
0057            565   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:105: TMR2=0xffff;   // Set to reload immediately
0057 75CCFF     566            mov     _TMR2,#0xFF
005A 75CDFF     567            mov     (_TMR2 >> 8),#0xFF
005D            568   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:106: ET2=1;         // Enable Timer2 interrupts
005D D2AD       569            setb    _ET2
005F            570   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:107: TR2=1;         // Start Timer2
005F D2CA       571            setb    _TR2
0061            572   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:109: EA=1; // Enable interrupts
0061 D2AF       573            setb    _EA
0063            574   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:111: return 0;
0063 758200     575            mov     dpl,#0x00
0066 22         576            ret
0067            577   ;------------------------------------------------------------
0067            578   ;Allocation info for local variables in function 'Timer2_ISR'
0067            579   ;------------------------------------------------------------
0067            580   ;------------------------------------------------------------
0067            581   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:114: void Timer2_ISR (void) interrupt 5
0067            582   ;        -----------------------------------------
0067            583   ;         function Timer2_ISR
0067            584   ;        -----------------------------------------
0067            585   _Timer2_ISR:
0067            586   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:133: }
0067 32         587            reti
0068            588   ;        eliminated unneeded push/pop psw
0068            589   ;        eliminated unneeded push/pop dpl
0068            590   ;        eliminated unneeded push/pop dph
0068            591   ;        eliminated unneeded push/pop b
0068            592   ;        eliminated unneeded push/pop acc
0068            593   ;------------------------------------------------------------
0068            594   ;Allocation info for local variables in function 'Timer4ms'
0068            595   ;------------------------------------------------------------
0068            596   ;ms                        Allocated to registers r2 
0068            597   ;i                         Allocated to registers r4 
0068            598   ;k                         Allocated to registers r3 
0068            599   ;------------------------------------------------------------
0068            600   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:136: void Timer4ms(unsigned char ms)
0068            601   ;        -----------------------------------------
0068            602   ;         function Timer4ms
0068            603   ;        -----------------------------------------
0068            604   _Timer4ms:
0068 AA82       605            mov     r2,dpl
006A            606   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:141: k=SFRPAGE;
006A ABBF       607            mov     r3,_SFRPAGE
006C            608   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:142: SFRPAGE=0xf;
006C 75BF0F     609            mov     _SFRPAGE,#0x0F
006F            610   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:144: CKCON1|=0b_0000_0001;
006F 43E401     611            orl     _CKCON1,#0x01
0072            612   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:146: TMR4RL = 65536-(SYSCLK/1000L); // Set Timer4 to overflow in 1 ms.
0072 759280     613            mov     _TMR4RL,#0x80
0075 759344     614            mov     (_TMR4RL >> 8),#0x44
0078            615   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:147: TMR4 = TMR4RL;                 // Initialize Timer4 for first overflow
0078 859294     616            mov     _TMR4,_TMR4RL
007B 859395     617            mov     (_TMR4 >> 8),(_TMR4RL >> 8)
007E            618   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:149: TMR4CN = 0x04;                 // Start Timer4 and clear overflow flag
007E 759104     619            mov     _TMR4CN,#0x04
0081            620   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:150: for (i = 0; i < ms; i++)       // Count <ms> overflows
0081 7C00       621            mov     r4,#0x00
0083            622   L004004?:
0083 C3         623            clr     c
0084 EC         624            mov     a,r4
0085 9A         625            subb    a,r2
0086 5001       626            jnc     L004007?
0088            627   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:152: while (!(TMR4CN & 0x80));  // Wait for overflow
0088            628   L004001?:
0088 E591       629            mov     a,_TMR4CN
008A 30E7B0     630            jnb     acc.7,L004001?
008D            631   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:153: TMR4CN &= ~(0x80);         // Clear overflow indicator
008D 53917F     632            anl     _TMR4CN,#0x7F
0090            633   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:150: for (i = 0; i < ms; i++)       // Count <ms> overflows
0090 0C         634            inc     r4
0091 8001       635            sjmp    L004004?
0093            636   L004007?:
0093            637   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:155: TMR4CN = 0 ;                   // Stop Timer4 and clear overflow flag
0093 759100     638            mov     _TMR4CN,#0x00
0096            639   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:156: SFRPAGE=k;         
0096 8BBF       640            mov     _SFRPAGE,r3
0098 22         641            ret
0099            642   ;------------------------------------------------------------
0099            643   ;Allocation info for local variables in function 'I2C_write'
0099            644   ;------------------------------------------------------------
0099            645   ;output_data               Allocated to registers 
0099            646   ;------------------------------------------------------------
0099            647   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:159: void I2C_write (unsigned char output_data)
0099            648   ;        -----------------------------------------
0099            649   ;         function I2C_write
0099            650   ;        -----------------------------------------
0099            651   _I2C_write:
0099 8582C2     652            mov     _SMB0DAT,dpl
009C            653   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:162: SI0 = 0;
009C C2C0       654            clr     _SI0
009E            655   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:163: while (!SI0); // Wait until done with send
009E            656   L005001?:
009E 30C030     657            jnb     _SI0,L005001?
00A1 22         658            ret
00A2            659   ;------------------------------------------------------------
00A2            660   ;Allocation info for local variables in function 'I2C_read'
00A2            661   ;------------------------------------------------------------
00A2            662   ;input_data                Allocated to registers 
00A2            663   ;------------------------------------------------------------
00A2            664   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:166: unsigned char I2C_read (void)
00A2            665   ;        -----------------------------------------
00A2            666   ;         function I2C_read
00A2            667   ;        -----------------------------------------
00A2            668   _I2C_read:
00A2            669   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:170: SI0 = 0;
00A2 C2C0       670            clr     _SI0
00A4            671   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:171: while (!SI0); // Wait until we have data to read
00A4            672   L006001?:
00A4 30C070     673            jnb     _SI0,L006001?
00A7            674   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:172: input_data = SMB0DAT; // Read the data
00A7 85C282     675            mov     dpl,_SMB0DAT
00AA            676   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:174: return input_data;
00AA 22         677            ret
00AB            678   ;------------------------------------------------------------
00AB            679   ;Allocation info for local variables in function 'I2C_start'
00AB            680   ;------------------------------------------------------------
00AB            681   ;------------------------------------------------------------
00AB            682   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:177: void I2C_start (void)
00AB            683   ;        -----------------------------------------
00AB            684   ;         function I2C_start
00AB            685   ;        -----------------------------------------
00AB            686   _I2C_start:
00AB            687   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:179: ACK0 = 1;
00AB D2C1       688            setb    _ACK0
00AD            689   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:180: STA0 = 1;     // Send I2C start
00AD D2C5       690            setb    _STA0
00AF            691   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:181: STO0 = 0;
00AF C2C4       692            clr     _STO0
00B1            693   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:182: SI0 = 0;
00B1 C2C0       694            clr     _SI0
00B3            695   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:183: while (!SI0); // Wait until start sent
00B3            696   L007001?:
00B3 30C0B0     697            jnb     _SI0,L007001?
00B6            698   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:184: STA0 = 0;     // Reset I2C start
00B6 C2C5       699            clr     _STA0
00B8 22         700            ret
00B9            701   ;------------------------------------------------------------
00B9            702   ;Allocation info for local variables in function 'I2C_stop'
00B9            703   ;------------------------------------------------------------
00B9            704   ;------------------------------------------------------------
00B9            705   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:187: void I2C_stop(void)
00B9            706   ;        -----------------------------------------
00B9            707   ;         function I2C_stop
00B9            708   ;        -----------------------------------------
00B9            709   _I2C_stop:
00B9            710   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:189: STO0 = 1;          // Perform I2C stop
00B9 D2C4       711            setb    _STO0
00BB            712   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:190: SI0 = 0;   // Clear SI
00BB C2C0       713            clr     _SI0
00BD 22         714            ret
00BE            715   ;------------------------------------------------------------
00BE            716   ;Allocation info for local variables in function 'UART1_Init'
00BE            717   ;------------------------------------------------------------
00BE            718   ;baudrate                  Allocated to registers r2 r3 r4 r5 
00BE            719   ;sloc0                     Allocated with name '_UART1_Init_sloc0_1_0'
00BE            720   ;------------------------------------------------------------
00BE            721   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:194: void UART1_Init (unsigned long baudrate)
00BE            722   ;        -----------------------------------------
00BE            723   ;         function UART1_Init
00BE            724   ;        -----------------------------------------
00BE            725   _UART1_Init:
00BE AA82       726            mov     r2,dpl
00C0 AB83       727            mov     r3,dph
00C2 ACF0       728            mov     r4,b
00C4 FD         729            mov     r5,a
00C5            730   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:196: SMOD1 = 0x0C; // no parity, 8 data bits, 1 stop bit
00C5 75E50C     731            mov     _SMOD1,#0x0C
00C8            732   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:197: SCON1 = 0x10;
00C8 75D210     733            mov     _SCON1,#0x10
00CB            734   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:198: if (((SYSCLK/baudrate)/2L)/0xFFFFL < 1){
00CB 8A00       735            mov     __divulong_PARM_2,r2
00CD 8B01       736            mov     (__divulong_PARM_2 + 1),r3
00CF 8C02       737            mov     (__divulong_PARM_2 + 2),r4
00D1 8D03       738            mov     (__divulong_PARM_2 + 3),r5
00D3 906C00     739            mov     dptr,#0x6C00
00D6 75F0DC     740            mov     b,#0xDC
00D9 7402       741            mov     a,#0x02
00DB 120100     742            lcall   __divulong
00DE AA82       743            mov     r2,dpl
00E0 AB83       744            mov     r3,dph
00E2 ACF0       745            mov     r4,b
00E4 C3         746            clr     c
00E5 13         747            rrc     a
00E6 F553       748            mov     (_UART1_Init_sloc0_1_0 + 3),a
00E8 EC         749            mov     a,r4
00E9 13         750            rrc     a
00EA F552       751            mov     (_UART1_Init_sloc0_1_0 + 2),a
00EC EB         752            mov     a,r3
00ED 13         753            rrc     a
00EE F551       754            mov     (_UART1_Init_sloc0_1_0 + 1),a
00F0 EA         755            mov     a,r2
00F1 13         756            rrc     a
00F2 F550       757            mov     _UART1_Init_sloc0_1_0,a
00F4 7500FF     758            mov     __divulong_PARM_2,#0xFF
00F7 7501FF     759            mov     (__divulong_PARM_2 + 1),#0xFF
00FA 750200     760            mov     (__divulong_PARM_2 + 2),#0x00
00FD 750300     761            mov     (__divulong_PARM_2 + 3),#0x00
0100 855082     762            mov     dpl,_UART1_Init_sloc0_1_0
0103 855183     763            mov     dph,(_UART1_Init_sloc0_1_0 + 1)
0106 8552F0     764            mov     b,(_UART1_Init_sloc0_1_0 + 2)
0109 E553       765            mov     a,(_UART1_Init_sloc0_1_0 + 3)
010B 120100     766            lcall   __divulong
010E AE82       767            mov     r6,dpl
0110 AF83       768            mov     r7,dph
0112 A8F0       769            mov     r0,b
0114 F9         770            mov     r1,a
0115 C3         771            clr     c
0116 EE         772            mov     a,r6
0117 9401       773            subb    a,#0x01
0119 EF         774            mov     a,r7
011A 9400       775            subb    a,#0x00
011C E8         776            mov     a,r0
011D 9400       777            subb    a,#0x00
011F E9         778            mov     a,r1
0120 9400       779            subb    a,#0x00
0122 5001       780            jnc     L009008?
0124            781   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:199: SBRL1 = 0x10000L-((SYSCLK/baudrate)/2L);
0124 E4         782            clr     a
0125 C3         783            clr     c
0126 9550       784            subb    a,_UART1_Init_sloc0_1_0
0128 FA         785            mov     r2,a
0129 E4         786            clr     a
012A 9551       787            subb    a,(_UART1_Init_sloc0_1_0 + 1)
012C FB         788            mov     r3,a
012D 7401       789            mov     a,#0x01
012F 9552       790            subb    a,(_UART1_Init_sloc0_1_0 + 2)
0131 FC         791            mov     r4,a
0132 E4         792            clr     a
0133 9553       793            subb    a,(_UART1_Init_sloc0_1_0 + 3)
0135 FD         794            mov     r5,a
0136 8AB4       795            mov     _SBRL1,r2
0138 8BB5       796            mov     (_SBRL1 >> 8),r3
013A            797   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:200: SBCON1 |= 0x03; // set prescaler to 1
013A 43AC03     798            orl     _SBCON1,#0x03
013D 020100     799            ljmp    L009009?
0140            800   L009008?:
0140            801   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:202: else if (((SYSCLK/baudrate)/2L)/0xFFFFL < 4){
0140 C3         802            clr     c
0141 EE         803            mov     a,r6
0142 9404       804            subb    a,#0x04
0144 EF         805            mov     a,r7
0145 9400       806            subb    a,#0x00
0147 E8         807            mov     a,r0
0148 9400       808            subb    a,#0x00
014A E9         809            mov     a,r1
014B 9400       810            subb    a,#0x00
014D 5001       811            jnc     L009005?
014F            812   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:203: SBRL1 = 0x10000L-(((SYSCLK/baudrate)/2L)/4L);
014F E553       813            mov     a,(_UART1_Init_sloc0_1_0 + 3)
0151 C3         814            clr     c
0152 13         815            rrc     a
0153 FD         816            mov     r5,a
0154 E552       817            mov     a,(_UART1_Init_sloc0_1_0 + 2)
0156 13         818            rrc     a
0157 FC         819            mov     r4,a
0158 E551       820            mov     a,(_UART1_Init_sloc0_1_0 + 1)
015A 13         821            rrc     a
015B FB         822            mov     r3,a
015C E550       823            mov     a,_UART1_Init_sloc0_1_0
015E 13         824            rrc     a
015F FA         825            mov     r2,a
0160 ED         826            mov     a,r5
0161 C3         827            clr     c
0162 13         828            rrc     a
0163 FD         829            mov     r5,a
0164 EC         830            mov     a,r4
0165 13         831            rrc     a
0166 FC         832            mov     r4,a
0167 EB         833            mov     a,r3
0168 13         834            rrc     a
0169 FB         835            mov     r3,a
016A EA         836            mov     a,r2
016B 13         837            rrc     a
016C FA         838            mov     r2,a
016D E4         839            clr     a
016E C3         840            clr     c
016F 9A         841            subb    a,r2
0170 FA         842            mov     r2,a
0171 E4         843            clr     a
0172 9B         844            subb    a,r3
0173 FB         845            mov     r3,a
0174 7401       846            mov     a,#0x01
0176 9C         847            subb    a,r4
0177 FC         848            mov     r4,a
0178 E4         849            clr     a
0179 9D         850            subb    a,r5
017A FD         851            mov     r5,a
017B 8AB4       852            mov     _SBRL1,r2
017D 8BB5       853            mov     (_SBRL1 >> 8),r3
017F            854   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:204: SBCON1 &= ~0x03;
017F 53ACFC     855            anl     _SBCON1,#0xFC
0182            856   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:205: SBCON1 |= 0x01; // set prescaler to 4
0182 43AC01     857            orl     _SBCON1,#0x01
0185 020100     858            ljmp    L009009?
0188            859   L009005?:
0188            860   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:207: else if (((SYSCLK/baudrate)/2L)/0xFFFFL < 12){
0188 C3         861            clr     c
0189 EE         862            mov     a,r6
018A 940C       863            subb    a,#0x0C
018C EF         864            mov     a,r7
018D 9400       865            subb    a,#0x00
018F E8         866            mov     a,r0
0190 9400       867            subb    a,#0x00
0192 E9         868            mov     a,r1
0193 9400       869            subb    a,#0x00
0195 5001       870            jnc     L009002?
0197            871   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:208: SBRL1 = 0x10000L-(((SYSCLK/baudrate)/2L)/12L);
0197 75000C     872            mov     __divulong_PARM_2,#0x0C
019A E4         873            clr     a
019B F501       874            mov     (__divulong_PARM_2 + 1),a
019D F502       875            mov     (__divulong_PARM_2 + 2),a
019F F503       876            mov     (__divulong_PARM_2 + 3),a
01A1 855082     877            mov     dpl,_UART1_Init_sloc0_1_0
01A4 855183     878            mov     dph,(_UART1_Init_sloc0_1_0 + 1)
01A7 8552F0     879            mov     b,(_UART1_Init_sloc0_1_0 + 2)
01AA E553       880            mov     a,(_UART1_Init_sloc0_1_0 + 3)
01AC 120100     881            lcall   __divulong
01AF AA82       882            mov     r2,dpl
01B1 AB83       883            mov     r3,dph
01B3 ACF0       884            mov     r4,b
01B5 FD         885            mov     r5,a
01B6 E4         886            clr     a
01B7 C3         887            clr     c
01B8 9A         888            subb    a,r2
01B9 FA         889            mov     r2,a
01BA E4         890            clr     a
01BB 9B         891            subb    a,r3
01BC FB         892            mov     r3,a
01BD 7401       893            mov     a,#0x01
01BF 9C         894            subb    a,r4
01C0 FC         895            mov     r4,a
01C1 E4         896            clr     a
01C2 9D         897            subb    a,r5
01C3 FD         898            mov     r5,a
01C4 8AB4       899            mov     _SBRL1,r2
01C6 8BB5       900            mov     (_SBRL1 >> 8),r3
01C8            901   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:209: SBCON1 &= ~0x03; // set prescaler to 12
01C8 53ACFC     902            anl     _SBCON1,#0xFC
01CB 8001       903            sjmp    L009009?
01CD            904   L009002?:
01CD            905   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:212: SBRL1 = 0x10000L-(((SYSCLK/baudrate)/2L)/48L);
01CD 750030     906            mov     __divulong_PARM_2,#0x30
01D0 E4         907            clr     a
01D1 F501       908            mov     (__divulong_PARM_2 + 1),a
01D3 F502       909            mov     (__divulong_PARM_2 + 2),a
01D5 F503       910            mov     (__divulong_PARM_2 + 3),a
01D7 855082     911            mov     dpl,_UART1_Init_sloc0_1_0
01DA 855183     912            mov     dph,(_UART1_Init_sloc0_1_0 + 1)
01DD 8552F0     913            mov     b,(_UART1_Init_sloc0_1_0 + 2)
01E0 E553       914            mov     a,(_UART1_Init_sloc0_1_0 + 3)
01E2 120100     915            lcall   __divulong
01E5 AA82       916            mov     r2,dpl
01E7 AB83       917            mov     r3,dph
01E9 ACF0       918            mov     r4,b
01EB FD         919            mov     r5,a
01EC E4         920            clr     a
01ED C3         921            clr     c
01EE 9A         922            subb    a,r2
01EF FA         923            mov     r2,a
01F0 E4         924            clr     a
01F1 9B         925            subb    a,r3
01F2 FB         926            mov     r3,a
01F3 7401       927            mov     a,#0x01
01F5 9C         928            subb    a,r4
01F6 FC         929            mov     r4,a
01F7 E4         930            clr     a
01F8 9D         931            subb    a,r5
01F9 FD         932            mov     r5,a
01FA 8AB4       933            mov     _SBRL1,r2
01FC 8BB5       934            mov     (_SBRL1 >> 8),r3
01FE            935   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:213: SBCON1 &= ~0x03;
01FE 53ACFC     936            anl     _SBCON1,#0xFC
0201            937   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:214: SBCON1 |= 0x02; // set prescaler to ?
0201 43AC02     938            orl     _SBCON1,#0x02
0204            939   L009009?:
0204            940   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:216: SCON1 |= 0x02; // indicate ready for TX
0204 43D202     941            orl     _SCON1,#0x02
0207            942   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:217: SBCON1 |= 0x40; // enable baud rate generator
0207 43AC40     943            orl     _SBCON1,#0x40
020A 22         944            ret
020B            945   ;------------------------------------------------------------
020B            946   ;Allocation info for local variables in function 'putchar1'
020B            947   ;------------------------------------------------------------
020B            948   ;c                         Allocated to registers r2 
020B            949   ;------------------------------------------------------------
020B            950   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:220: void putchar1 (char c)
020B            951   ;        -----------------------------------------
020B            952   ;         function putchar1
020B            953   ;        -----------------------------------------
020B            954   _putchar1:
020B AA82       955            mov     r2,dpl
020D            956   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:222: if (c == '\n' )
020D BA0A00     957            cjne    r2,#0x0A,L010006?
0210            958   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:224: while (!(SCON1 & 0x02));
0210            959   L010001?:
0210 E5D2       960            mov     a,_SCON1
0212 30E140     961            jnb     acc.1,L010001?
0215            962   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:225: SCON1 &= ~0x02;
0215 53D2FD     963            anl     _SCON1,#0xFD
0218            964   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:226: SBUF1 = '\r' ;
0218 75D30D     965            mov     _SBUF1,#0x0D
021B            966   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:228: while (!(SCON1 & 0x02));
021B            967   L010006?:
021B E5D2       968            mov     a,_SCON1
021D 30E100     969            jnb     acc.1,L010006?
0220            970   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:229: SCON1 &= ~0x02;
0220 53D2FD     971            anl     _SCON1,#0xFD
0223            972   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:230: SBUF1 = c;
0223 8AD3       973            mov     _SBUF1,r2
0225 22         974            ret
0226            975   ;------------------------------------------------------------
0226            976   ;Allocation info for local variables in function 'getchar1'
0226            977   ;------------------------------------------------------------
0226            978   ;c                         Allocated to registers 
0226            979   ;------------------------------------------------------------
0226            980   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:233: char getchar1 (void)
0226            981   ;        -----------------------------------------
0226            982   ;         function getchar1
0226            983   ;        -----------------------------------------
0226            984   _getchar1:
0226            985   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:236: while (!(SCON1 & 0x01));
0226            986   L011001?:
0226 E5D2       987            mov     a,_SCON1
0228 30E080     988            jnb     acc.0,L011001?
022B            989   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:237: SCON1 &= ~0x01;
022B 53D2FE     990            anl     _SCON1,#0xFE
022E            991   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:238: c = SBUF1;
022E 85D382     992            mov     dpl,_SBUF1
0231            993   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:239: return (c);
0231 22         994            ret
0232            995   ;------------------------------------------------------------
0232            996   ;Allocation info for local variables in function 'nunchuck_init'
0232            997   ;------------------------------------------------------------
0232            998   ;i                         Allocated to registers r2 
0232            999   ;buf                       Allocated with name '_nunchuck_init_buf_1_91'
0232           1000   ;sloc0                     Allocated with name '_nunchuck_init_sloc0_1_0'
0232           1001   ;sloc1                     Allocated with name '_nunchuck_init_sloc1_1_0'
0232           1002   ;sloc2                     Allocated with name '_nunchuck_init_sloc2_1_0'
0232           1003   ;------------------------------------------------------------
0232           1004   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:243: void nunchuck_init(bit print_extension_type)
0232           1005   ;        -----------------------------------------
0232           1006   ;         function nunchuck_init
0232           1007   ;        -----------------------------------------
0232           1008   _nunchuck_init:
0232           1009   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:255: I2C_start();
0232 120100    1010            lcall   _I2C_start
0235           1011   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:256: I2C_write(0xA4);
0235 7582A4    1012            mov     dpl,#0xA4
0238 120100    1013            lcall   _I2C_write
023B           1014   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:257: I2C_write(0xF0);
023B 7582F0    1015            mov     dpl,#0xF0
023E 120100    1016            lcall   _I2C_write
0241           1017   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:258: I2C_write(0x55);
0241 758255    1018            mov     dpl,#0x55
0244 120100    1019            lcall   _I2C_write
0247           1020   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:259: I2C_stop();
0247 120100    1021            lcall   _I2C_stop
024A           1022   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:260: Timer4ms(1);
024A 758201    1023            mov     dpl,#0x01
024D 120100    1024            lcall   _Timer4ms
0250           1025   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:262: I2C_start();
0250 120100    1026            lcall   _I2C_start
0253           1027   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:263: I2C_write(0xA4);
0253 7582A4    1028            mov     dpl,#0xA4
0256 120100    1029            lcall   _I2C_write
0259           1030   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:264: I2C_write(0xFB);
0259 7582FB    1031            mov     dpl,#0xFB
025C 120100    1032            lcall   _I2C_write
025F           1033   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:265: I2C_write(0x00);
025F 758200    1034            mov     dpl,#0x00
0262 120100    1035            lcall   _I2C_write
0265           1036   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:266: I2C_stop();
0265 120100    1037            lcall   _I2C_stop
0268           1038   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:267: Timer4ms(1);
0268 758201    1039            mov     dpl,#0x01
026B 120100    1040            lcall   _Timer4ms
026E           1041   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:271: I2C_start();
026E 120100    1042            lcall   _I2C_start
0271           1043   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:272: I2C_write(0xA4);
0271 7582A4    1044            mov     dpl,#0xA4
0274 120100    1045            lcall   _I2C_write
0277           1046   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:273: I2C_write(0xFA); // extension type register
0277 7582FA    1047            mov     dpl,#0xFA
027A 120100    1048            lcall   _I2C_write
027D           1049   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:274: I2C_stop();
027D 120100    1050            lcall   _I2C_stop
0280           1051   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:275: Timer4ms(3); // 3 ms required to complete acquisition
0280 758203    1052            mov     dpl,#0x03
0283 120100    1053            lcall   _Timer4ms
0286           1054   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:277: I2C_start();
0286 120100    1055            lcall   _I2C_start
0289           1056   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:278: I2C_write(0xA5);
0289 7582A5    1057            mov     dpl,#0xA5
028C 120100    1058            lcall   _I2C_write
028F           1059   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:281: for(i=0; i<6; i++)
028F 7A00      1060            mov     r2,#0x00
0291           1061   L012003?:
0291 BA0600    1062            cjne    r2,#0x06,L012013?
0294           1063   L012013?:
0294 5001      1064            jnc     L012006?
0296           1065   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:283: buf[i]=I2C_read();
0296 EA        1066            mov     a,r2
0297 24A0      1067            add     a,#_nunchuck_init_buf_1_91
0299 F8        1068            mov     r0,a
029A C002      1069            push    ar2
029C C000      1070            push    ar0
029E 120100    1071            lcall   _I2C_read
02A1 E582      1072            mov     a,dpl
02A3 D000      1073            pop     ar0
02A5 D002      1074            pop     ar2
02A7 F6        1075            mov     @r0,a
02A8           1076   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:281: for(i=0; i<6; i++)
02A8 0A        1077            inc     r2
02A9 8001      1078            sjmp    L012003?
02AB           1079   L012006?:
02AB           1080   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:285: ACK0=0;
02AB C2C1      1081            clr     _ACK0
02AD           1082   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:286: I2C_stop();
02AD 120100    1083            lcall   _I2C_stop
02B0           1084   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:287: Timer4ms(3);
02B0 758203    1085            mov     dpl,#0x03
02B3 120100    1086            lcall   _Timer4ms
02B6           1087   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:289: if(print_extension_type)
02B6 304080    1088            jnb     _nunchuck_init_PARM_1,L012002?
02B9           1089   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:292: buf[0],  buf[1], buf[2], buf[3], buf[4], buf[5]);
02B9 AAA5      1090            mov     r2,(_nunchuck_init_buf_1_91 + 0x0005)
02BB 7B00      1091            mov     r3,#0x00
02BD ACA4      1092            mov     r4,(_nunchuck_init_buf_1_91 + 0x0004)
02BF 7D00      1093            mov     r5,#0x00
02C1 85A3F0    1094            mov     _nunchuck_init_sloc0_1_0,(_nunchuck_init_buf_1_91 + 0x0003)
02C4 75F100    1095            mov     (_nunchuck_init_sloc0_1_0 + 1),#0x00
02C7 85A240    1096            mov     _nunchuck_init_sloc1_1_0,(_nunchuck_init_buf_1_91 + 0x0002)
02CA 754100    1097            mov     (_nunchuck_init_sloc1_1_0 + 1),#0x00
02CD 85A190    1098            mov     _nunchuck_init_sloc2_1_0,(_nunchuck_init_buf_1_91 + 0x0001)
02D0 759100    1099            mov     (_nunchuck_init_sloc2_1_0 + 1),#0x00
02D3 AEA0      1100            mov     r6,_nunchuck_init_buf_1_91
02D5 7F00      1101            mov     r7,#0x00
02D7           1102   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:291: printf("Extension type: %02x  %02x  %02x  %02x  %02x  %02x\n", 
02D7 C002      1103            push    ar2
02D9 C003      1104            push    ar3
02DB C004      1105            push    ar4
02DD C005      1106            push    ar5
02DF C0F0      1107            push    _nunchuck_init_sloc0_1_0
02E1 C0F1      1108            push    (_nunchuck_init_sloc0_1_0 + 1)
02E3 C040      1109            push    _nunchuck_init_sloc1_1_0
02E5 C041      1110            push    (_nunchuck_init_sloc1_1_0 + 1)
02E7 C090      1111            push    _nunchuck_init_sloc2_1_0
02E9 C091      1112            push    (_nunchuck_init_sloc2_1_0 + 1)
02EB C006      1113            push    ar6
02ED C007      1114            push    ar7
02EF 74C0      1115            mov     a,#__str_0
02F1 C0E0      1116            push    acc
02F3 749D      1117            mov     a,#(__str_0 >> 8)
02F5 C0E0      1118            push    acc
02F7 7480      1119            mov     a,#0x80
02F9 C0E0      1120            push    acc
02FB 120100    1121            lcall   _printf
02FE E581      1122            mov     a,sp
0300 24F1      1123            add     a,#0xf1
0302 F581      1124            mov     sp,a
0304           1125   L012002?:
0304           1126   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:297: I2C_start();
0304 120100    1127            lcall   _I2C_start
0307           1128   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:298: I2C_write(0xA4);
0307 7582A4    1129            mov     dpl,#0xA4
030A 120100    1130            lcall   _I2C_write
030D           1131   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:299: I2C_write(0xF0);
030D 7582F0    1132            mov     dpl,#0xF0
0310 120100    1133            lcall   _I2C_write
0313           1134   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:300: I2C_write(0xAA);
0313 7582AA    1135            mov     dpl,#0xAA
0316 120100    1136            lcall   _I2C_write
0319           1137   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:301: I2C_stop();
0319 120100    1138            lcall   _I2C_stop
031C           1139   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:302: Timer4ms(1);
031C 758201    1140            mov     dpl,#0x01
031F 120100    1141            lcall   _Timer4ms
0322           1142   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:304: I2C_start();
0322 120100    1143            lcall   _I2C_start
0325           1144   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:305: I2C_write(0xA4);
0325 7582A4    1145            mov     dpl,#0xA4
0328 120100    1146            lcall   _I2C_write
032B           1147   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:306: I2C_write(0x40);
032B 758240    1148            mov     dpl,#0x40
032E 120100    1149            lcall   _I2C_write
0331           1150   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:307: I2C_write(0x00);
0331 758200    1151            mov     dpl,#0x00
0334 120100    1152            lcall   _I2C_write
0337           1153   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:308: I2C_write(0x00);
0337 758200    1154            mov     dpl,#0x00
033A 120100    1155            lcall   _I2C_write
033D           1156   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:309: I2C_write(0x00);
033D 758200    1157            mov     dpl,#0x00
0340 120100    1158            lcall   _I2C_write
0343           1159   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:310: I2C_write(0x00);
0343 758200    1160            mov     dpl,#0x00
0346 120100    1161            lcall   _I2C_write
0349           1162   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:311: I2C_write(0x00);
0349 758200    1163            mov     dpl,#0x00
034C 120100    1164            lcall   _I2C_write
034F           1165   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:312: I2C_write(0x00);
034F 758200    1166            mov     dpl,#0x00
0352 120100    1167            lcall   _I2C_write
0355           1168   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:313: I2C_stop();
0355 120100    1169            lcall   _I2C_stop
0358           1170   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:314: Timer4ms(1);
0358 758201    1171            mov     dpl,#0x01
035B 120100    1172            lcall   _Timer4ms
035E           1173   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:316: I2C_start();
035E 120100    1174            lcall   _I2C_start
0361           1175   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:317: I2C_write(0xA4);
0361 7582A4    1176            mov     dpl,#0xA4
0364 120100    1177            lcall   _I2C_write
0367           1178   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:318: I2C_write(0x40);
0367 758240    1179            mov     dpl,#0x40
036A 120100    1180            lcall   _I2C_write
036D           1181   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:319: I2C_write(0x00);
036D 758200    1182            mov     dpl,#0x00
0370 120100    1183            lcall   _I2C_write
0373           1184   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:320: I2C_write(0x00);
0373 758200    1185            mov     dpl,#0x00
0376 120100    1186            lcall   _I2C_write
0379           1187   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:321: I2C_write(0x00);
0379 758200    1188            mov     dpl,#0x00
037C 120100    1189            lcall   _I2C_write
037F           1190   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:322: I2C_write(0x00);
037F 758200    1191            mov     dpl,#0x00
0382 120100    1192            lcall   _I2C_write
0385           1193   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:323: I2C_write(0x00);
0385 758200    1194            mov     dpl,#0x00
0388 120100    1195            lcall   _I2C_write
038B           1196   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:324: I2C_write(0x00);
038B 758200    1197            mov     dpl,#0x00
038E 120100    1198            lcall   _I2C_write
0391           1199   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:325: I2C_stop();
0391 120100    1200            lcall   _I2C_stop
0394           1201   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:326: Timer4ms(1);
0394 758201    1202            mov     dpl,#0x01
0397 120100    1203            lcall   _Timer4ms
039A           1204   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:328: I2C_start();
039A 120100    1205            lcall   _I2C_start
039D           1206   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:329: I2C_write(0xA4);
039D 7582A4    1207            mov     dpl,#0xA4
03A0 120100    1208            lcall   _I2C_write
03A3           1209   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:330: I2C_write(0x40);
03A3 758240    1210            mov     dpl,#0x40
03A6 120100    1211            lcall   _I2C_write
03A9           1212   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:331: I2C_write(0x00);
03A9 758200    1213            mov     dpl,#0x00
03AC 120100    1214            lcall   _I2C_write
03AF           1215   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:332: I2C_write(0x00);
03AF 758200    1216            mov     dpl,#0x00
03B2 120100    1217            lcall   _I2C_write
03B5           1218   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:333: I2C_write(0x00);
03B5 758200    1219            mov     dpl,#0x00
03B8 120100    1220            lcall   _I2C_write
03BB           1221   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:334: I2C_write(0x00);
03BB 758200    1222            mov     dpl,#0x00
03BE 120100    1223            lcall   _I2C_write
03C1           1224   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:335: I2C_stop();
03C1 120100    1225            lcall   _I2C_stop
03C4           1226   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:336: Timer4ms(1);
03C4 758201    1227            mov     dpl,#0x01
03C7 020100    1228            ljmp    _Timer4ms
03CA           1229   ;------------------------------------------------------------
03CA           1230   ;Allocation info for local variables in function 'nunchuck_getdata'
03CA           1231   ;------------------------------------------------------------
03CA           1232   ;s                         Allocated to registers r2 r3 r4 
03CA           1233   ;i                         Allocated to registers r5 
03CA           1234   ;------------------------------------------------------------
03CA           1235   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:340: void nunchuck_getdata(unsigned char * s)
03CA           1236   ;        -----------------------------------------
03CA           1237   ;         function nunchuck_getdata
03CA           1238   ;        -----------------------------------------
03CA           1239   _nunchuck_getdata:
03CA AA82      1240            mov     r2,dpl
03CC AB83      1241            mov     r3,dph
03CE ACF0      1242            mov     r4,b
03D0           1243   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:345: I2C_start();
03D0 C002      1244            push    ar2
03D2 C003      1245            push    ar3
03D4 C004      1246            push    ar4
03D6 120100    1247            lcall   _I2C_start
03D9           1248   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:346: I2C_write(0xA4);
03D9 7582A4    1249            mov     dpl,#0xA4
03DC 120100    1250            lcall   _I2C_write
03DF           1251   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:347: I2C_write(0x00);
03DF 758200    1252            mov     dpl,#0x00
03E2 120100    1253            lcall   _I2C_write
03E5           1254   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:348: I2C_stop();
03E5 120100    1255            lcall   _I2C_stop
03E8           1256   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:349: Timer4ms(3);       // 3 ms required to complete acquisition
03E8 758203    1257            mov     dpl,#0x03
03EB 120100    1258            lcall   _Timer4ms
03EE           1259   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:352: I2C_start();
03EE 120100    1260            lcall   _I2C_start
03F1           1261   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:353: I2C_write(0xA5);
03F1 7582A5    1262            mov     dpl,#0xA5
03F4 120100    1263            lcall   _I2C_write
03F7 D004      1264            pop     ar4
03F9 D003      1265            pop     ar3
03FB D002      1266            pop     ar2
03FD           1267   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:356: for(i=0; i<6; i++)
03FD 7D00      1268            mov     r5,#0x00
03FF           1269   L013001?:
03FF BD06C0    1270            cjne    r5,#0x06,L013010?
0402           1271   L013010?:
0402 5001      1272            jnc     L013004?
0404           1273   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:358: s[i]=(I2C_read()^0x17)+0x17; // Read and decrypt
0404 ED        1274            mov     a,r5
0405 2A        1275            add     a,r2
0406 FE        1276            mov     r6,a
0407 E4        1277            clr     a
0408 3B        1278            addc    a,r3
0409 FF        1279            mov     r7,a
040A 8C00      1280            mov     ar0,r4
040C C002      1281            push    ar2
040E C003      1282            push    ar3
0410 C004      1283            push    ar4
0412 C005      1284            push    ar5
0414 C006      1285            push    ar6
0416 C007      1286            push    ar7
0418 C000      1287            push    ar0
041A 120100    1288            lcall   _I2C_read
041D E582      1289            mov     a,dpl
041F D000      1290            pop     ar0
0421 D007      1291            pop     ar7
0423 D006      1292            pop     ar6
0425 D005      1293            pop     ar5
0427 D004      1294            pop     ar4
0429 D003      1295            pop     ar3
042B D002      1296            pop     ar2
042D 6417      1297            xrl     a,#0x17
042F 2417      1298            add     a,#0x17
0431 F9        1299            mov     r1,a
0432 8E82      1300            mov     dpl,r6
0434 8F83      1301            mov     dph,r7
0436 88F0      1302            mov     b,r0
0438 120100    1303            lcall   __gptrput
043B           1304   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:356: for(i=0; i<6; i++)
043B 0D        1305            inc     r5
043C 8001      1306            sjmp    L013001?
043E           1307   L013004?:
043E           1308   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:360: ACK0=0;
043E C2C1      1309            clr     _ACK0
0440           1310   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:361: I2C_stop();
0440 020100    1311            ljmp    _I2C_stop
0443           1312   ;------------------------------------------------------------
0443           1313   ;Allocation info for local variables in function 'main'
0443           1314   ;------------------------------------------------------------
0443           1315   ;rbuf                      Allocated with name '_main_rbuf_1_98'
0443           1316   ;joy_x                     Allocated with name '_main_joy_x_1_98'
0443           1317   ;joy_y                     Allocated with name '_main_joy_y_1_98'
0443           1318   ;off_x                     Allocated with name '_main_off_x_1_98'
0443           1319   ;off_y                     Allocated with name '_main_off_y_1_98'
0443           1320   ;acc_x                     Allocated to registers r4 r5 
0443           1321   ;acc_y                     Allocated with name '_main_acc_y_1_98'
0443           1322   ;acc_z                     Allocated with name '_main_acc_z_1_98'
0443           1323   ;sloc0                     Allocated with name '_main_sloc0_1_0'
0443           1324   ;------------------------------------------------------------
0443           1325   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:364: void main (void)
0443           1326   ;        -----------------------------------------
0443           1327   ;         function main
0443           1328   ;        -----------------------------------------
0443           1329   _main:
0443           1330   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:370: UART1_Init(BAUDRATE);
0443 90C200    1331            mov     dptr,#0xC200
0446 75F001    1332            mov     b,#0x01
0449 E4        1333            clr     a
044A 120100    1334            lcall   _UART1_Init
044D           1335   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:372: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
044D 7480      1336            mov     a,#__str_1
044F C0E0      1337            push    acc
0451 749F      1338            mov     a,#(__str_1 >> 8)
0453 C0E0      1339            push    acc
0455 7480      1340            mov     a,#0x80
0457 C0E0      1341            push    acc
0459 120100    1342            lcall   _printf
045C 1581      1343            dec     sp
045E 1581      1344            dec     sp
0460 1581      1345            dec     sp
0462           1346   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:374: "Check pins P2.0 and P2.1 with the oscilloscope.\r\n");
0462 74C0      1347            mov     a,#__str_2
0464 C0E0      1348            push    acc
0466 749F      1349            mov     a,#(__str_2 >> 8)
0468 C0E0      1350            push    acc
046A 7480      1351            mov     a,#0x80
046C C0E0      1352            push    acc
046E 120100    1353            lcall   _printf
0471 1581      1354            dec     sp
0473 1581      1355            dec     sp
0475 1581      1356            dec     sp
0477           1357   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:384: printf("\x1b[2J\x1b[1;1H"); // Clear screen using ANSI escape sequence.
0477 7400      1358            mov     a,#__str_3
0479 C0E0      1359            push    acc
047B 74A0      1360            mov     a,#(__str_3 >> 8)
047D C0E0      1361            push    acc
047F 7480      1362            mov     a,#0x80
0481 C0E0      1363            push    acc
0483 120100    1364            lcall   _printf
0486 1581      1365            dec     sp
0488 1581      1366            dec     sp
048A 1581      1367            dec     sp
048C           1368   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:385: printf("\n\nWII Nunchuck I2C Reader\n");
048C 7440      1369            mov     a,#__str_4
048E C0E0      1370            push    acc
0490 74A0      1371            mov     a,#(__str_4 >> 8)
0492 C0E0      1372            push    acc
0494 7480      1373            mov     a,#0x80
0496 C0E0      1374            push    acc
0498 120100    1375            lcall   _printf
049B 1581      1376            dec     sp
049D 1581      1377            dec     sp
049F 1581      1378            dec     sp
04A1           1379   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:387: Timer4ms(200);
04A1 7582C8    1380            mov     dpl,#0xC8
04A4 120100    1381            lcall   _Timer4ms
04A7           1382   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:388: nunchuck_init(1);
04A7 D240      1383            setb    _nunchuck_init_PARM_1
04A9 120100    1384            lcall   _nunchuck_init
04AC           1385   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:389: Timer4ms(100);
04AC 758264    1386            mov     dpl,#0x64
04AF 120100    1387            lcall   _Timer4ms
04B2           1388   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:391: nunchuck_getdata(rbuf);
04B2 9094D0    1389            mov     dptr,#_main_rbuf_1_98
04B5 75F040    1390            mov     b,#0x40
04B8 120100    1391            lcall   _nunchuck_getdata
04BB           1392   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:393: off_x=(int)rbuf[0]-128;
04BB AAD0      1393            mov     r2,_main_rbuf_1_98
04BD 7B00      1394            mov     r3,#0x00
04BF EA        1395            mov     a,r2
04C0 2480      1396            add     a,#0x80
04C2 F5C0      1397            mov     _main_off_x_1_98,a
04C4 EB        1398            mov     a,r3
04C5 34FF      1399            addc    a,#0xff
04C7 F5C1      1400            mov     (_main_off_x_1_98 + 1),a
04C9           1401   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:394: off_y=(int)rbuf[1]-128;
04C9 ACD1      1402            mov     r4,(_main_rbuf_1_98 + 0x0001)
04CB 7D00      1403            mov     r5,#0x00
04CD EC        1404            mov     a,r4
04CE 2480      1405            add     a,#0x80
04D0 F510      1406            mov     _main_off_y_1_98,a
04D2 ED        1407            mov     a,r5
04D3 34FF      1408            addc    a,#0xff
04D5 F511      1409            mov     (_main_off_y_1_98 + 1),a
04D7           1410   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:395: printf("Offset_X:%4d Offset_Y:%4d\n\n", off_x, off_y);
04D7 C010      1411            push    _main_off_y_1_98
04D9 C011      1412            push    (_main_off_y_1_98 + 1)
04DB C0C0      1413            push    _main_off_x_1_98
04DD C0C1      1414            push    (_main_off_x_1_98 + 1)
04DF 7480      1415            mov     a,#__str_5
04E1 C0E0      1416            push    acc
04E3 74A0      1417            mov     a,#(__str_5 >> 8)
04E5 C0E0      1418            push    acc
04E7 7480      1419            mov     a,#0x80
04E9 C0E0      1420            push    acc
04EB 120100    1421            lcall   _printf
04EE E581      1422            mov     a,sp
04F0 24F9      1423            add     a,#0xf9
04F2 F581      1424            mov     sp,a
04F4           1425   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:397: while(1)
04F4           1426   L014014?:
04F4           1427   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:399: nunchuck_getdata(rbuf);
04F4 9094D0    1428            mov     dptr,#_main_rbuf_1_98
04F7 75F040    1429            mov     b,#0x40
04FA 120100    1430            lcall   _nunchuck_getdata
04FD           1431   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:401: joy_x=(int)rbuf[0]-128-off_x;
04FD AED0      1432            mov     r6,_main_rbuf_1_98
04FF 7F00      1433            mov     r7,#0x00
0501 EE        1434            mov     a,r6
0502 2480      1435            add     a,#0x80
0504 FE        1436            mov     r6,a
0505 EF        1437            mov     a,r7
0506 34FF      1438            addc    a,#0xff
0508 FF        1439            mov     r7,a
0509 EE        1440            mov     a,r6
050A C3        1441            clr     c
050B 95C0      1442            subb    a,_main_off_x_1_98
050D F520      1443            mov     _main_joy_x_1_98,a
050F EF        1444            mov     a,r7
0510 95C1      1445            subb    a,(_main_off_x_1_98 + 1)
0512 F521      1446            mov     (_main_joy_x_1_98 + 1),a
0514           1447   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:402: joy_y=(int)rbuf[1]-128-off_y;
0514 ACD1      1448            mov     r4,(_main_rbuf_1_98 + 0x0001)
0516 7D00      1449            mov     r5,#0x00
0518 EC        1450            mov     a,r4
0519 2480      1451            add     a,#0x80
051B FC        1452            mov     r4,a
051C ED        1453            mov     a,r5
051D 34FF      1454            addc    a,#0xff
051F FD        1455            mov     r5,a
0520 EC        1456            mov     a,r4
0521 C3        1457            clr     c
0522 9510      1458            subb    a,_main_off_y_1_98
0524 F570      1459            mov     _main_joy_y_1_98,a
0526 ED        1460            mov     a,r5
0527 9511      1461            subb    a,(_main_off_y_1_98 + 1)
0529 F571      1462            mov     (_main_joy_y_1_98 + 1),a
052B           1463   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:403: acc_x=rbuf[2]*4; 
052B E5D2      1464            mov     a,(_main_rbuf_1_98 + 0x0002)
052D 75F004    1465            mov     b,#0x04
0530 A4        1466            mul     ab
0531 FC        1467            mov     r4,a
0532 ADF0      1468            mov     r5,b
0534           1469   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:404: acc_y=rbuf[3]*4;
0534 E5D3      1470            mov     a,(_main_rbuf_1_98 + 0x0003)
0536 75F004    1471            mov     b,#0x04
0539 A4        1472            mul     ab
053A F560      1473            mov     _main_acc_y_1_98,a
053C 85F061    1474            mov     (_main_acc_y_1_98 + 1),b
053F           1475   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:405: acc_z=rbuf[4]*4;
053F E5D4      1476            mov     a,(_main_rbuf_1_98 + 0x0004)
0541 75F004    1477            mov     b,#0x04
0544 A4        1478            mul     ab
0545 F5B0      1479            mov     _main_acc_z_1_98,a
0547 85F0B1    1480            mov     (_main_acc_z_1_98 + 1),b
054A           1481   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:407: but1=(rbuf[5] & 0x01)?1:0;
054A E5D5      1482            mov     a,(_main_rbuf_1_98 + 0x0005)
054C 13        1483            rrc     a
054D 9230      1484            mov     _main_but1_1_98,c
054F           1485   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:408: but2=(rbuf[5] & 0x02)?1:0;
054F E5D5      1486            mov     a,(_main_rbuf_1_98 + 0x0005)
0551 A2E1      1487            mov     c,acc.1
0553 9270      1488            mov     _main_but2_1_98,c
0555           1489   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:409: if (rbuf[5] & 0x04) acc_x+=2;
0555 E5D5      1490            mov     a,(_main_rbuf_1_98 + 0x0005)
0557 30E200    1491            jnb     acc.2,L014002?
055A 7402      1492            mov     a,#0x02
055C 2C        1493            add     a,r4
055D FC        1494            mov     r4,a
055E E4        1495            clr     a
055F 3D        1496            addc    a,r5
0560 FD        1497            mov     r5,a
0561           1498   L014002?:
0561           1499   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:410: if (rbuf[5] & 0x08) acc_x+=1;
0561 E5D5      1500            mov     a,(_main_rbuf_1_98 + 0x0005)
0563 30E340    1501            jnb     acc.3,L014004?
0566 0C        1502            inc     r4
0567 BC0080    1503            cjne    r4,#0x00,L014033?
056A 0D        1504            inc     r5
056B           1505   L014033?:
056B           1506   L014004?:
056B           1507   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:411: if (rbuf[5] & 0x10) acc_y+=2;
056B E5D5      1508            mov     a,(_main_rbuf_1_98 + 0x0005)
056D 30E4C0    1509            jnb     acc.4,L014006?
0570 7402      1510            mov     a,#0x02
0572 2560      1511            add     a,_main_acc_y_1_98
0574 F560      1512            mov     _main_acc_y_1_98,a
0576 E4        1513            clr     a
0577 3561      1514            addc    a,(_main_acc_y_1_98 + 1)
0579 F561      1515            mov     (_main_acc_y_1_98 + 1),a
057B           1516   L014006?:
057B           1517   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:412: if (rbuf[5] & 0x20) acc_y+=1;
057B E5D5      1518            mov     a,(_main_rbuf_1_98 + 0x0005)
057D 30E500    1519            jnb     acc.5,L014008?
0580 0560      1520            inc     _main_acc_y_1_98
0582 E4        1521            clr     a
0583 B56040    1522            cjne    a,_main_acc_y_1_98,L014036?
0586 0561      1523            inc     (_main_acc_y_1_98 + 1)
0588           1524   L014036?:
0588           1525   L014008?:
0588           1526   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:413: if (rbuf[5] & 0x40) acc_z+=2;
0588 E5D5      1527            mov     a,(_main_rbuf_1_98 + 0x0005)
058A 30E680    1528            jnb     acc.6,L014010?
058D 7402      1529            mov     a,#0x02
058F 25B0      1530            add     a,_main_acc_z_1_98
0591 F5B0      1531            mov     _main_acc_z_1_98,a
0593 E4        1532            clr     a
0594 35B1      1533            addc    a,(_main_acc_z_1_98 + 1)
0596 F5B1      1534            mov     (_main_acc_z_1_98 + 1),a
0598           1535   L014010?:
0598           1536   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:414: if (rbuf[5] & 0x80) acc_z+=1;
0598 E5D5      1537            mov     a,(_main_rbuf_1_98 + 0x0005)
059A 30E7C0    1538            jnb     acc.7,L014012?
059D 05B0      1539            inc     _main_acc_z_1_98
059F E4        1540            clr     a
05A0 B5B000    1541            cjne    a,_main_acc_z_1_98,L014039?
05A3 05B1      1542            inc     (_main_acc_z_1_98 + 1)
05A5           1543   L014039?:
05A5           1544   L014012?:
05A5           1545   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:417: but1?'1':'0', but2?'1':'0', joy_x, joy_y, acc_x, acc_y, acc_z);
05A5 307040    1546            jnb     _main_but2_1_98,L014018?
05A8 7E31      1547            mov     r6,#0x31
05AA 8001      1548            sjmp    L014019?
05AC           1549   L014018?:
05AC 7E30      1550            mov     r6,#0x30
05AE           1551   L014019?:
05AE EE        1552            mov     a,r6
05AF 33        1553            rlc     a
05B0 95E0      1554            subb    a,acc
05B2 FF        1555            mov     r7,a
05B3 3030C0    1556            jnb     _main_but1_1_98,L014020?
05B6 75F031    1557            mov     _main_sloc0_1_0,#0x31
05B9 8001      1558            sjmp    L014021?
05BB           1559   L014020?:
05BB 75F030    1560            mov     _main_sloc0_1_0,#0x30
05BE           1561   L014021?:
05BE E5F0      1562            mov     a,_main_sloc0_1_0
05C0 FA        1563            mov     r2,a
05C1 33        1564            rlc     a
05C2 95E0      1565            subb    a,acc
05C4 FB        1566            mov     r3,a
05C5           1567   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:416: printf("Buttons(Z:%c, C:%c) Joystick(%4d, %4d) Accelerometer(%3d, %3d, %3d)\x1b[0J\r",
05C5 C0B0      1568            push    _main_acc_z_1_98
05C7 C0B1      1569            push    (_main_acc_z_1_98 + 1)
05C9 C060      1570            push    _main_acc_y_1_98
05CB C061      1571            push    (_main_acc_y_1_98 + 1)
05CD C004      1572            push    ar4
05CF C005      1573            push    ar5
05D1 C070      1574            push    _main_joy_y_1_98
05D3 C071      1575            push    (_main_joy_y_1_98 + 1)
05D5 C020      1576            push    _main_joy_x_1_98
05D7 C021      1577            push    (_main_joy_x_1_98 + 1)
05D9 C006      1578            push    ar6
05DB C007      1579            push    ar7
05DD C002      1580            push    ar2
05DF C003      1581            push    ar3
05E1 7440      1582            mov     a,#__str_6
05E3 C0E0      1583            push    acc
05E5 74A4      1584            mov     a,#(__str_6 >> 8)
05E7 C0E0      1585            push    acc
05E9 7480      1586            mov     a,#0x80
05EB C0E0      1587            push    acc
05ED 120100    1588            lcall   _printf
05F0 E581      1589            mov     a,sp
05F2 24EF      1590            add     a,#0xef
05F4 F581      1591            mov     sp,a
05F6           1592   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:419: putchar1((char)joy_x);
05F6 852082    1593            mov     dpl,_main_joy_x_1_98
05F9 120100    1594            lcall   _putchar1
05FC           1595   ;        C:\Users\viral\Documents\uni stuff\291\project 2\test_sending.c:421: Timer4ms(100);
05FC 758264    1596            mov     dpl,#0x64
05FF 120100    1597            lcall   _Timer4ms
0602 020100    1598            ljmp    L014014?
0605           1599            rseg R_CSEG
0605           1600   
0000           1601            rseg R_XINIT
0000           1602   
0000           1603            rseg R_CONST
0000           1604   __str_0:
0000 45787465  1605            db 'Extension type: %02x  %02x  %02x  %02x  %02x  %02x'
     6E73696F
     6E207479
     70653A20
     25303278
     20202530
     32782020
     25303278
     20202530
     32782020
     25303278
     20202530
     3278
0032 0A        1606            db 0x0A
0033 00        1607            db 0x00
0034           1608   __str_1:
0034 1B        1609            db 0x1B
0035 5B324A    1610            db '[2J'
0038 00        1611            db 0x00
0039           1612   __str_2:
0039 53717561  1613            db 'Square wave generator for the F38x.'
     72652077
     61766520
     67656E65
     7261746F
     7220666F
     72207468
     65204633
     38782E
005C 0D        1614            db 0x0D
005D 0A        1615            db 0x0A
005E 43686563  1616            db 'Check pins P2.0 and P2.'
     6B207069
     6E732050
     322E3020
     616E6420
     50322E
0075 31207769  1617            db '1 with the oscilloscope.'
     74682074
     6865206F
     7363696C
     6C6F7363
     6F70652E
008D 0D        1618            db 0x0D
008E 0A        1619            db 0x0A
008F 00        1620            db 0x00
0090           1621   __str_3:
0090 1B        1622            db 0x1B
0091 5B324A    1623            db '[2J'
0094 1B        1624            db 0x1B
0095 5B313B31  1625            db '[1;1H'
     48
009A 00        1626            db 0x00
009B           1627   __str_4:
009B 0A        1628            db 0x0A
009C 0A        1629            db 0x0A
009D 57494920  1630            db 'WII Nunchuck I2C Reader'
     4E756E63
     6875636B
     20493243
     20526561
     646572
00B4 0A        1631            db 0x0A
00B5 00        1632            db 0x00
00B6           1633   __str_5:
00B6 4F666673  1634            db 'Offset_X:%4d Offset_Y:%4d'
     65745F58
     3A253464
     204F6666
     7365745F
     593A2534
     64
00CF 0A        1635            db 0x0A
00D0 0A        1636            db 0x0A
00D1 00        1637            db 0x00
00D2           1638   __str_6:
00D2 42757474  1639            db 'Buttons(Z:%c, C:%c) Joystick(%4d, %4d) Accelerometer(%3d, %3'
     6F6E7328
     5A3A2563
     2C20433A
     25632920
     4A6F7973
     7469636B
     28253464
     2C202534
     64292041
     6363656C
     65726F6D
     65746572
     28253364
     2C202533
010E 642C2025  1640            db 'd, %3d)'
     336429
0115 1B        1641            db 0x1B
0116 5B304A    1642            db '[0J'
0119 0D        1643            db 0x0D
011A 00        1644            db 0x00
011B           1645   
002E           1646            CSEG
002E           1647   
002E           1648   end
